
v3nbody256.g:     format de fichier elf64-x86-64


Déassemblage de la section .interp :

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x47>
 328:	78 38                	js     362 <__abi_tag-0x3a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Déassemblage de la section .note.gnu.property :

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	30 00                	xor    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	80 00 c0             	addb   $0xc0,(%rax)
 34c:	04 00                	add    $0x0,%al
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	00 00                	add    %al,(%rax)
 356:	00 00                	add    %al,(%rax)
 358:	01 00                	add    %eax,(%rax)
 35a:	01 c0                	add    %eax,%eax
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	19 00                	sbb    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
 366:	00 00                	add    %al,(%rax)
 368:	02 00                	add    (%rax),%al
 36a:	01 c0                	add    %eax,%eax
 36c:	04 00                	add    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	05 00 00 00 00       	add    $0x0,%eax
 375:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .note.gnu.build-id :

0000000000000378 <.note.gnu.build-id>:
 378:	04 00                	add    $0x0,%al
 37a:	00 00                	add    %al,(%rax)
 37c:	14 00                	adc    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	03 00                	add    (%rax),%eax
 382:	00 00                	add    %al,(%rax)
 384:	47                   	rex.RXB
 385:	4e 55                	rex.WRX push %rbp
 387:	00 4a f4             	add    %cl,-0xc(%rdx)
 38a:	55                   	push   %rbp
 38b:	b1 e0                	mov    $0xe0,%cl
 38d:	40 6f                	rex outsl %ds:(%rsi),(%dx)
 38f:	93                   	xchg   %eax,%ebx
 390:	95                   	xchg   %eax,%ebp
 391:	f5                   	cmc    
 392:	08 7b 2c             	or     %bh,0x2c(%rbx)
 395:	4f c6                	rex.WRXB (bad) 
 397:	4d 77 2c             	rex.WRB ja 3c6 <__abi_tag+0x2a>
 39a:	74 8a                	je     326 <__abi_tag-0x76>

Déassemblage de la section .note.ABI-tag :

000000000000039c <__abi_tag>:
 39c:	04 00                	add    $0x0,%al
 39e:	00 00                	add    %al,(%rax)
 3a0:	10 00                	adc    %al,(%rax)
 3a2:	00 00                	add    %al,(%rax)
 3a4:	01 00                	add    %eax,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	47                   	rex.RXB
 3a9:	4e 55                	rex.WRX push %rbp
 3ab:	00 00                	add    %al,(%rax)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 04 00             	add    %al,(%rax,%rax,1)
 3b2:	00 00                	add    %al,(%rax)
 3b4:	04 00                	add    $0x0,%al
 3b6:	00 00                	add    %al,(%rax)
 3b8:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .gnu.hash :

00000000000003c0 <.gnu.hash>:
 3c0:	02 00                	add    (%rax),%al
 3c2:	00 00                	add    %al,(%rax)
 3c4:	0f 00 00             	sldt   (%rax)
 3c7:	00 01                	add    %al,(%rcx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 06                	add    %al,(%rsi)
	...
 3d5:	01 10                	add    %edx,(%rax)
 3d7:	00 0f                	add    %cl,(%rdi)
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 00                	add    %al,(%rax)
 3dd:	00 00                	add    %al,(%rax)
 3df:	00 29                	add    %ch,(%rcx)
 3e1:	1d                   	.byte 0x1d
 3e2:	8c                   	.byte 0x8c
 3e3:	1c                   	.byte 0x1c

Déassemblage de la section .dynsym :

00000000000003e8 <.dynsym>:
	...
 400:	b1 00                	mov    $0x0,%cl
 402:	00 00                	add    %al,(%rax)
 404:	12 00                	adc    (%rax),%al
	...
 416:	00 00                	add    %al,(%rax)
 418:	01 00                	add    %eax,(%rax)
 41a:	00 00                	add    %al,(%rax)
 41c:	20 00                	and    %al,(%rax)
	...
 42e:	00 00                	add    %al,(%rax)
 430:	5b                   	pop    %rbx
 431:	00 00                	add    %al,(%rax)
 433:	00 12                	add    %dl,(%rdx)
	...
 445:	00 00                	add    %al,(%rax)
 447:	00 46 00             	add    %al,0x0(%rsi)
 44a:	00 00                	add    %al,(%rax)
 44c:	12 00                	adc    (%rax),%al
	...
 45e:	00 00                	add    %al,(%rax)
 460:	68 00 00 00 12       	push   $0x12000000
	...
 475:	00 00                	add    %al,(%rax)
 477:	00 9f 00 00 00 12    	add    %bl,0x12000000(%rdi)
	...
 48d:	00 00                	add    %al,(%rax)
 48f:	00 60 00             	add    %ah,0x0(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	12 00                	adc    (%rax),%al
	...
 4a6:	00 00                	add    %al,(%rax)
 4a8:	1d 00 00 00 20       	sbb    $0x20000000,%eax
	...
 4bd:	00 00                	add    %al,(%rax)
 4bf:	00 7b 00             	add    %bh,0x0(%rbx)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	12 00                	adc    (%rax),%al
	...
 4d6:	00 00                	add    %al,(%rax)
 4d8:	54                   	push   %rsp
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 12                	add    %dl,(%rdx)
	...
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 2c 00             	add    %ch,(%rax,%rax,1)
 4f2:	00 00                	add    %al,(%rax)
 4f4:	20 00                	and    %al,(%rax)
	...
 506:	00 00                	add    %al,(%rax)
 508:	82                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 12                	add    %dl,(%rdx)
	...
 51d:	00 00                	add    %al,(%rax)
 51f:	00 90 00 00 00 22    	add    %dl,0x22000000(%rax)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 76 00             	add    %dh,0x0(%rsi)
 53a:	00 00                	add    %al,(%rax)
 53c:	12 00                	adc    (%rax),%al
	...
 54e:	00 00                	add    %al,(%rax)
 550:	6f                   	outsl  %ds:(%rsi),(%dx)
 551:	00 00                	add    %al,(%rax)
 553:	00 11                	add    %dl,(%rcx)
 555:	00 19                	add    %bl,(%rcx)
 557:	00 70 40             	add    %dh,0x40(%rax)
 55a:	00 00                	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	08 00                	or     %al,(%rax)
 562:	00 00                	add    %al,(%rax)
 564:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .dynstr :

0000000000000568 <.dynstr>:
 568:	00 5f 49             	add    %bl,0x49(%rdi)
 56b:	54                   	push   %rsp
 56c:	4d 5f                	rex.WRB pop %r15
 56e:	64 65 72 65          	fs gs jb 5d7 <__abi_tag+0x23b>
 572:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 579:	4d 
 57a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 57c:	6f                   	outsl  %ds:(%rsi),(%dx)
 57d:	6e                   	outsb  %ds:(%rsi),(%dx)
 57e:	65 54                	gs push %rsp
 580:	61                   	(bad)  
 581:	62                   	(bad)  
 582:	6c                   	insb   (%dx),%es:(%rdi)
 583:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 587:	67 6d                	insl   (%dx),%es:(%edi)
 589:	6f                   	outsl  %ds:(%rsi),(%dx)
 58a:	6e                   	outsb  %ds:(%rsi),(%dx)
 58b:	5f                   	pop    %rdi
 58c:	73 74                	jae    602 <__abi_tag+0x266>
 58e:	61                   	(bad)  
 58f:	72 74                	jb     605 <__abi_tag+0x269>
 591:	5f                   	pop    %rdi
 592:	5f                   	pop    %rdi
 593:	00 5f 49             	add    %bl,0x49(%rdi)
 596:	54                   	push   %rsp
 597:	4d 5f                	rex.WRB pop %r15
 599:	72 65                	jb     600 <__abi_tag+0x264>
 59b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5a2:	4d 
 5a3:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5a5:	6f                   	outsl  %ds:(%rsi),(%dx)
 5a6:	6e                   	outsb  %ds:(%rsi),(%dx)
 5a7:	65 54                	gs push %rsp
 5a9:	61                   	(bad)  
 5aa:	62                   	(bad)  
 5ab:	6c                   	insb   (%dx),%es:(%rdi)
 5ac:	65 00 6f 6d          	add    %ch,%gs:0x6d(%rdi)
 5b0:	70 5f                	jo     611 <__abi_tag+0x275>
 5b2:	67 65 74 5f          	addr32 gs je 615 <__abi_tag+0x279>
 5b6:	77 74                	ja     62c <__abi_tag+0x290>
 5b8:	69 6d 65 00 66 66 6c 	imul   $0x6c666600,0x65(%rbp),%ebp
 5bf:	75 73                	jne    634 <__abi_tag+0x298>
 5c1:	68 00 70 75 74       	push   $0x74757000
 5c6:	73 00                	jae    5c8 <__abi_tag+0x22c>
 5c8:	73 74                	jae    63e <__abi_tag+0x2a2>
 5ca:	72 74                	jb     640 <__abi_tag+0x2a4>
 5cc:	6f                   	outsl  %ds:(%rsi),(%dx)
 5cd:	6c                   	insb   (%dx),%es:(%rdi)
 5ce:	6c                   	insb   (%dx),%es:(%rdi)
 5cf:	00 70 72             	add    %dh,0x72(%rax)
 5d2:	69 6e 74 66 00 73 74 	imul   $0x74730066,0x74(%rsi),%ebp
 5d9:	64 6f                	outsl  %fs:(%rsi),(%dx)
 5db:	75 74                	jne    651 <__abi_tag+0x2b5>
 5dd:	00 72 61             	add    %dh,0x61(%rdx)
 5e0:	6e                   	outsb  %ds:(%rsi),(%dx)
 5e1:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 5e5:	6c                   	insb   (%dx),%es:(%rdi)
 5e6:	6c                   	insb   (%dx),%es:(%rdi)
 5e7:	6f                   	outsl  %ds:(%rsi),(%dx)
 5e8:	63 00                	movsxd (%rax),%eax
 5ea:	61                   	(bad)  
 5eb:	6c                   	insb   (%dx),%es:(%rdi)
 5ec:	69 67 6e 65 64 5f 61 	imul   $0x615f6465,0x6e(%rdi),%esp
 5f3:	6c                   	insb   (%dx),%es:(%rdi)
 5f4:	6c                   	insb   (%dx),%es:(%rdi)
 5f5:	6f                   	outsl  %ds:(%rsi),(%dx)
 5f6:	63 00                	movsxd (%rax),%eax
 5f8:	5f                   	pop    %rdi
 5f9:	5f                   	pop    %rdi
 5fa:	63 78 61             	movsxd 0x61(%rax),%edi
 5fd:	5f                   	pop    %rdi
 5fe:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 604:	7a 65                	jp     66b <__abi_tag+0x2cf>
 606:	00 5f 5f             	add    %bl,0x5f(%rdi)
 609:	6c                   	insb   (%dx),%es:(%rdi)
 60a:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 611:	72 74                	jb     687 <__abi_tag+0x2eb>
 613:	5f                   	pop    %rdi
 614:	6d                   	insl   (%dx),%es:(%rdi)
 615:	61                   	(bad)  
 616:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 61d:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 621:	6d                   	insl   (%dx),%es:(%rdi)
 622:	2e 73 6f             	jae,pn 694 <__abi_tag+0x2f8>
 625:	2e 36 00 6c 69 62    	cs ss add %ch,0x62(%rcx,%rbp,2)
 62b:	67 6f                	outsl  %ds:(%esi),(%dx)
 62d:	6d                   	insl   (%dx),%es:(%rdi)
 62e:	70 2e                	jo     65e <__abi_tag+0x2c2>
 630:	73 6f                	jae    6a1 <__abi_tag+0x305>
 632:	2e 31 00             	cs xor %eax,(%rax)
 635:	6c                   	insb   (%dx),%es:(%rdi)
 636:	69 62 70 74 68 72 65 	imul   $0x65726874,0x70(%rdx),%esp
 63d:	61                   	(bad)  
 63e:	64 2e 73 6f          	fs jae,pn 6b1 <__abi_tag+0x315>
 642:	2e 30 00             	cs xor %al,(%rax)
 645:	6c                   	insb   (%dx),%es:(%rdi)
 646:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 64d:	36 00 4f 4d          	ss add %cl,0x4d(%rdi)
 651:	50                   	push   %rax
 652:	5f                   	pop    %rdi
 653:	32 2e                	xor    (%rsi),%ch
 655:	30 00                	xor    %al,(%rax)
 657:	47                   	rex.RXB
 658:	4c                   	rex.WR
 659:	49                   	rex.WB
 65a:	42                   	rex.X
 65b:	43 5f                	rex.XB pop %r15
 65d:	32 2e                	xor    (%rsi),%ch
 65f:	31 36                	xor    %esi,(%rsi)
 661:	00 47 4c             	add    %al,0x4c(%rdi)
 664:	49                   	rex.WB
 665:	42                   	rex.X
 666:	43 5f                	rex.XB pop %r15
 668:	32 2e                	xor    (%rsi),%ch
 66a:	32 2e                	xor    (%rsi),%ch
 66c:	35                   	.byte 0x35
	...

Déassemblage de la section .gnu.version :

000000000000066e <.gnu.version>:
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	00 00                	add    %al,(%rax)
 674:	02 00                	add    (%rax),%al
 676:	03 00                	add    (%rax),%eax
 678:	02 00                	add    (%rax),%al
 67a:	02 00                	add    (%rax),%al
 67c:	02 00                	add    (%rax),%al
 67e:	00 00                	add    %al,(%rax)
 680:	02 00                	add    (%rax),%al
 682:	02 00                	add    (%rax),%al
 684:	00 00                	add    %al,(%rax)
 686:	04 00                	add    $0x0,%al
 688:	02 00                	add    (%rax),%al
 68a:	02 00                	add    (%rax),%al
 68c:	02 00                	add    (%rax),%al

Déassemblage de la section .gnu.version_r :

0000000000000690 <.gnu.version_r>:
 690:	01 00                	add    %eax,(%rax)
 692:	01 00                	add    %eax,(%rax)
 694:	c0 00 00             	rolb   $0x0,(%rax)
 697:	00 10                	add    %dl,(%rax)
 699:	00 00                	add    %al,(%rax)
 69b:	00 20                	add    %ah,(%rax)
 69d:	00 00                	add    %al,(%rax)
 69f:	00 40 25             	add    %al,0x25(%rax)
 6a2:	26 04 00             	es add $0x0,%al
 6a5:	00 03                	add    %al,(%rbx)
 6a7:	00 e7                	add    %ah,%bh
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 01                	add    %al,(%rcx)
 6b1:	00 02                	add    %al,(%rdx)
 6b3:	00 dd                	add    %bl,%ch
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 10                	add    %dl,(%rax)
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 96 91 96 06 00    	add    %dl,0x69691(%rsi)
 6c5:	00 04 00             	add    %al,(%rax,%rax,1)
 6c8:	ef                   	out    %eax,(%dx)
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 10                	add    %dl,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 75 1a             	add    %dh,0x1a(%rbp)
 6d2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6d8:	fa                   	cli    
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .rela.dyn :

00000000000006e0 <.rela.dyn>:
 6e0:	b0 3d                	mov    $0x3d,%al
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	08 00                	or     %al,(%rax)
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6f6 <__abi_tag+0x35a>
 6f6:	00 00                	add    %al,(%rax)
 6f8:	b8 3d 00 00 00       	mov    $0x3d,%eax
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 08                	add    %cl,(%rax)
 701:	00 00                	add    %al,(%rax)
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 f0                	add    %dh,%al
 709:	13 00                	adc    (%rax),%eax
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 c0                	add    %al,%al
 711:	3d 00 00 00 00       	cmp    $0x0,%eax
 716:	00 00                	add    %al,(%rax)
 718:	08 00                	or     %al,(%rax)
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	b0 14                	mov    $0x14,%al
 722:	00 00                	add    %al,(%rax)
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	68 40 00 00 00       	push   $0x40
 72d:	00 00                	add    %al,(%rax)
 72f:	00 08                	add    %cl,(%rax)
 731:	00 00                	add    %al,(%rax)
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 68 40             	add    %ch,0x40(%rax)
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	d8 3f                	fdivrs (%rdi)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	06                   	(bad)  
 749:	00 00                	add    %al,(%rax)
 74b:	00 02                	add    %al,(%rdx)
	...
 755:	00 00                	add    %al,(%rax)
 757:	00 e0                	add    %ah,%al
 759:	3f                   	(bad)  
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	06                   	(bad)  
 761:	00 00                	add    %al,(%rax)
 763:	00 06                	add    %al,(%rsi)
	...
 76d:	00 00                	add    %al,(%rax)
 76f:	00 e8                	add    %ch,%al
 771:	3f                   	(bad)  
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	06                   	(bad)  
 779:	00 00                	add    %al,(%rax)
 77b:	00 08                	add    %cl,(%rax)
	...
 785:	00 00                	add    %al,(%rax)
 787:	00 f0                	add    %dh,%al
 789:	3f                   	(bad)  
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	06                   	(bad)  
 791:	00 00                	add    %al,(%rax)
 793:	00 0b                	add    %cl,(%rbx)
	...
 79d:	00 00                	add    %al,(%rax)
 79f:	00 f8                	add    %bh,%al
 7a1:	3f                   	(bad)  
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	06                   	(bad)  
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 7b1 <__abi_tag+0x415>
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 00                	add    %al,(%rax)
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 70 40             	add    %dh,0x40(%rax)
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	05 00 00 00 0f       	add    $0xf000000,%eax
	...

Déassemblage de la section .rela.plt :

00000000000007d0 <.rela.plt>:
 7d0:	18 40 00             	sbb    %al,0x0(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 07                	add    %al,(%rdi)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 01                	add    %al,(%rcx)
	...
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 20                	add    %ah,(%rax)
 7e9:	40 00 00             	rex add %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	07                   	(bad)  
 7f1:	00 00                	add    %al,(%rax)
 7f3:	00 03                	add    %al,(%rbx)
	...
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 28                	add    %ch,(%rax)
 801:	40 00 00             	rex add %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	07                   	(bad)  
 809:	00 00                	add    %al,(%rax)
 80b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 816:	00 00                	add    %al,(%rax)
 818:	30 40 00             	xor    %al,0x0(%rax)
 81b:	00 00                	add    %al,(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 07                	add    %al,(%rdi)
 821:	00 00                	add    %al,(%rax)
 823:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 829 <__abi_tag+0x48d>
 829:	00 00                	add    %al,(%rax)
 82b:	00 00                	add    %al,(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 38                	add    %bh,(%rax)
 831:	40 00 00             	rex add %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	07                   	(bad)  
 839:	00 00                	add    %al,(%rax)
 83b:	00 07                	add    %al,(%rdi)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 40 40             	add    %al,0x40(%rax)
 84a:	00 00                	add    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	07                   	(bad)  
 851:	00 00                	add    %al,(%rax)
 853:	00 09                	add    %cl,(%rcx)
	...
 85d:	00 00                	add    %al,(%rax)
 85f:	00 48 40             	add    %cl,0x40(%rax)
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	07                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 0a                	add    %cl,(%rdx)
	...
 875:	00 00                	add    %al,(%rax)
 877:	00 50 40             	add    %dl,0x40(%rax)
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	07                   	(bad)  
 881:	00 00                	add    %al,(%rax)
 883:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 88e:	00 00                	add    %al,(%rax)
 890:	58                   	pop    %rax
 891:	40 00 00             	rex add %al,(%rax)
 894:	00 00                	add    %al,(%rax)
 896:	00 00                	add    %al,(%rax)
 898:	07                   	(bad)  
 899:	00 00                	add    %al,(%rax)
 89b:	00 0e                	add    %cl,(%rsi)
	...

Déassemblage de la section .init :

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Déassemblage de la section .plt :

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    *0x2fda(%rip)        # 4020 <puts@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <omp_get_wtime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    *0x2fd2(%rip)        # 4028 <omp_get_wtime@OMP_2.0>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <printf@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4030 <printf@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <strtoll@plt>:
    1070:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4038 <strtoll@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <malloc@plt>:
    1080:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4040 <malloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <fflush@plt>:
    1090:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4048 <fflush@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 4050 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <rand@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmp    *0x2fa2(%rip)        # 4058 <rand@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

Déassemblage de la section .text :

00000000000010c0 <main>:
    10c0:	41 57                	push   %r15
    10c2:	41 56                	push   %r14
    10c4:	41 55                	push   %r13
    10c6:	41 54                	push   %r12
    10c8:	41 bc 00 40 00 00    	mov    $0x4000,%r12d
    10ce:	55                   	push   %rbp
    10cf:	53                   	push   %rbx
    10d0:	48 83 ec 38          	sub    $0x38,%rsp
    10d4:	83 ff 01             	cmp    $0x1,%edi
    10d7:	7e 13                	jle    10ec <main+0x2c>
    10d9:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    10dd:	ba 0a 00 00 00       	mov    $0xa,%edx
    10e2:	31 f6                	xor    %esi,%esi
    10e4:	e8 87 ff ff ff       	call   1070 <strtoll@plt>
    10e9:	49 89 c4             	mov    %rax,%r12
    10ec:	4e 8d 2c a5 00 00 00 	lea    0x0(,%r12,4),%r13
    10f3:	00 
    10f4:	bf 30 00 00 00       	mov    $0x30,%edi
    10f9:	e8 82 ff ff ff       	call   1080 <malloc@plt>
    10fe:	4c 89 ee             	mov    %r13,%rsi
    1101:	bf 40 00 00 00       	mov    $0x40,%edi
    1106:	48 89 c5             	mov    %rax,%rbp
    1109:	e8 92 ff ff ff       	call   10a0 <aligned_alloc@plt>
    110e:	4c 89 ee             	mov    %r13,%rsi
    1111:	bf 40 00 00 00       	mov    $0x40,%edi
    1116:	48 89 45 00          	mov    %rax,0x0(%rbp)
    111a:	e8 81 ff ff ff       	call   10a0 <aligned_alloc@plt>
    111f:	4c 89 ee             	mov    %r13,%rsi
    1122:	bf 40 00 00 00       	mov    $0x40,%edi
    1127:	48 89 45 08          	mov    %rax,0x8(%rbp)
    112b:	e8 70 ff ff ff       	call   10a0 <aligned_alloc@plt>
    1130:	4c 89 ee             	mov    %r13,%rsi
    1133:	bf 40 00 00 00       	mov    $0x40,%edi
    1138:	48 89 45 10          	mov    %rax,0x10(%rbp)
    113c:	e8 5f ff ff ff       	call   10a0 <aligned_alloc@plt>
    1141:	4c 89 ee             	mov    %r13,%rsi
    1144:	bf 40 00 00 00       	mov    $0x40,%edi
    1149:	48 89 45 18          	mov    %rax,0x18(%rbp)
    114d:	e8 4e ff ff ff       	call   10a0 <aligned_alloc@plt>
    1152:	4c 89 ee             	mov    %r13,%rsi
    1155:	bf 40 00 00 00       	mov    $0x40,%edi
    115a:	48 89 45 20          	mov    %rax,0x20(%rbp)
    115e:	e8 3d ff ff ff       	call   10a0 <aligned_alloc@plt>
    1163:	4c 89 e6             	mov    %r12,%rsi
    1166:	48 89 ef             	mov    %rbp,%rdi
    1169:	48 89 45 28          	mov    %rax,0x28(%rbp)
    116d:	e8 9e 03 00 00       	call   1510 <init>
    1172:	4b 8d 34 64          	lea    (%r12,%r12,2),%rsi
    1176:	48 c1 e6 04          	shl    $0x4,%rsi
    117a:	48 89 f1             	mov    %rsi,%rcx
    117d:	48 89 f2             	mov    %rsi,%rdx
    1180:	48 c1 e9 14          	shr    $0x14,%rcx
    1184:	48 c1 ea 0a          	shr    $0xa,%rdx
    1188:	48 8d 3d 79 0e 00 00 	lea    0xe79(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    118f:	31 c0                	xor    %eax,%eax
    1191:	e8 ca fe ff ff       	call   1060 <printf@plt>
    1196:	4c 8d 05 11 0f 00 00 	lea    0xf11(%rip),%r8        # 20ae <_IO_stdin_used+0xae>
    119d:	48 8d 0d 12 0f 00 00 	lea    0xf12(%rip),%rcx        # 20b6 <_IO_stdin_used+0xb6>
    11a4:	48 8d 15 16 0f 00 00 	lea    0xf16(%rip),%rdx        # 20c1 <_IO_stdin_used+0xc1>
    11ab:	48 8d 35 17 0f 00 00 	lea    0xf17(%rip),%rsi        # 20c9 <_IO_stdin_used+0xc9>
    11b2:	48 8d 3d 15 0f 00 00 	lea    0xf15(%rip),%rdi        # 20ce <_IO_stdin_used+0xce>
    11b9:	31 c0                	xor    %eax,%eax
    11bb:	e8 a0 fe ff ff       	call   1060 <printf@plt>
    11c0:	48 8b 3d a9 2e 00 00 	mov    0x2ea9(%rip),%rdi        # 4070 <stdout@@GLIBC_2.2.5>
    11c7:	e8 c4 fe ff ff       	call   1090 <fflush@plt>
    11cc:	4d 85 e4             	test   %r12,%r12
    11cf:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    11d3:	0f 88 dd 01 00 00    	js     13b6 <main+0x2f6>
    11d9:	c4 c1 f2 2a c4       	vcvtsi2ss %r12,%xmm1,%xmm0
    11de:	4c 89 e0             	mov    %r12,%rax
    11e1:	48 ff c8             	dec    %rax
    11e4:	0f 88 e9 01 00 00    	js     13d3 <main+0x313>
    11ea:	c4 e1 f2 2a c8       	vcvtsi2ss %rax,%xmm1,%xmm1
    11ef:	c5 f2 59 c8          	vmulss %xmm0,%xmm1,%xmm1
    11f3:	c5 fa 5a c0          	vcvtss2sd %xmm0,%xmm0,%xmm0
    11f7:	c5 fb 59 05 a1 0f 00 	vmulsd 0xfa1(%rip),%xmm0,%xmm0        # 21a0 <_IO_stdin_used+0x1a0>
    11fe:	00 
    11ff:	c5 c9 57 f6          	vxorpd %xmm6,%xmm6,%xmm6
    1203:	45 31 ff             	xor    %r15d,%r15d
    1206:	c5 f2 5a e1          	vcvtss2sd %xmm1,%xmm1,%xmm4
    120a:	c5 fb 11 74 24 10    	vmovsd %xmm6,0x10(%rsp)
    1210:	c4 e2 d9 b9 05 8f 0f 	vfmadd231sd 0xf8f(%rip),%xmm4,%xmm0        # 21a8 <_IO_stdin_used+0x1a8>
    1217:	00 00 
    1219:	c5 fb 11 64 24 20    	vmovsd %xmm4,0x20(%rsp)
    121f:	c5 fb 11 74 24 08    	vmovsd %xmm6,0x8(%rsp)
    1225:	4c 8d 35 bc 0e 00 00 	lea    0xebc(%rip),%r14        # 20e8 <_IO_stdin_used+0xe8>
    122c:	4c 8d 2d b6 0e 00 00 	lea    0xeb6(%rip),%r13        # 20e9 <_IO_stdin_used+0xe9>
    1233:	c5 fb 59 05 75 0f 00 	vmulsd 0xf75(%rip),%xmm0,%xmm0        # 21b0 <_IO_stdin_used+0x1b0>
    123a:	00 
    123b:	c5 fb 5a c0          	vcvtsd2ss %xmm0,%xmm0,%xmm0
    123f:	c5 fa 5a f8          	vcvtss2sd %xmm0,%xmm0,%xmm7
    1243:	c5 fa 59 c0          	vmulss %xmm0,%xmm0,%xmm0
    1247:	c5 fb 11 7c 24 18    	vmovsd %xmm7,0x18(%rsp)
    124d:	c5 fa 5a f8          	vcvtss2sd %xmm0,%xmm0,%xmm7
    1251:	c5 fb 11 7c 24 28    	vmovsd %xmm7,0x28(%rsp)
    1257:	eb 6a                	jmp    12c3 <main+0x203>
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1260:	c5 fb 10 35 50 0f 00 	vmovsd 0xf50(%rip),%xmm6        # 21b8 <_IO_stdin_used+0x1b8>
    1267:	00 
    1268:	c5 fb 10 6c 24 10    	vmovsd 0x10(%rsp),%xmm5
    126e:	c5 cb 5e c8          	vdivsd %xmm0,%xmm6,%xmm1
    1272:	4c 89 ef             	mov    %r13,%rdi
    1275:	4c 89 f2             	mov    %r14,%rdx
    1278:	4c 89 fe             	mov    %r15,%rsi
    127b:	b8 03 00 00 00       	mov    $0x3,%eax
    1280:	c5 f3 59 54 24 18    	vmulsd 0x18(%rsp),%xmm1,%xmm2
    1286:	c5 eb 58 5c 24 08    	vaddsd 0x8(%rsp),%xmm2,%xmm3
    128c:	c5 fb 11 5c 24 08    	vmovsd %xmm3,0x8(%rsp)
    1292:	c5 f3 59 d9          	vmulsd %xmm1,%xmm1,%xmm3
    1296:	c5 f3 59 4c 24 20    	vmulsd 0x20(%rsp),%xmm1,%xmm1
    129c:	c4 e2 e1 b9 6c 24 28 	vfmadd231sd 0x28(%rsp),%xmm3,%xmm5
    12a3:	c5 fb 11 6c 24 10    	vmovsd %xmm5,0x10(%rsp)
    12a9:	e8 b2 fd ff ff       	call   1060 <printf@plt>
    12ae:	48 8b 3d bb 2d 00 00 	mov    0x2dbb(%rip),%rdi        # 4070 <stdout@@GLIBC_2.2.5>
    12b5:	e8 d6 fd ff ff       	call   1090 <fflush@plt>
    12ba:	48 83 fb 0a          	cmp    $0xa,%rbx
    12be:	74 78                	je     1338 <main+0x278>
    12c0:	49 89 df             	mov    %rbx,%r15
    12c3:	e8 88 fd ff ff       	call   1050 <omp_get_wtime@plt>
    12c8:	c5 fb 11 04 24       	vmovsd %xmm0,(%rsp)
    12cd:	c5 fa 10 05 57 0e 00 	vmovss 0xe57(%rip),%xmm0        # 212c <_IO_stdin_used+0x12c>
    12d4:	00 
    12d5:	4c 89 e6             	mov    %r12,%rsi
    12d8:	48 89 ef             	mov    %rbp,%rdi
    12db:	e8 50 03 00 00       	call   1630 <move_particles>
    12e0:	e8 6b fd ff ff       	call   1050 <omp_get_wtime@plt>
    12e5:	c5 fb 5c 04 24       	vsubsd (%rsp),%xmm0,%xmm0
    12ea:	49 8d 5f 01          	lea    0x1(%r15),%rbx
    12ee:	49 83 ff 02          	cmp    $0x2,%r15
    12f2:	0f 87 68 ff ff ff    	ja     1260 <main+0x1a0>
    12f8:	c5 fb 10 6c 24 18    	vmovsd 0x18(%rsp),%xmm5
    12fe:	c5 fb 10 5c 24 20    	vmovsd 0x20(%rsp),%xmm3
    1304:	c5 d3 5e d0          	vdivsd %xmm0,%xmm5,%xmm2
    1308:	4c 89 ef             	mov    %r13,%rdi
    130b:	48 8d 15 0a 0e 00 00 	lea    0xe0a(%rip),%rdx        # 211c <_IO_stdin_used+0x11c>
    1312:	4c 89 fe             	mov    %r15,%rsi
    1315:	b8 03 00 00 00       	mov    $0x3,%eax
    131a:	c5 e3 5e c8          	vdivsd %xmm0,%xmm3,%xmm1
    131e:	e8 3d fd ff ff       	call   1060 <printf@plt>
    1323:	48 8b 3d 46 2d 00 00 	mov    0x2d46(%rip),%rdi        # 4070 <stdout@@GLIBC_2.2.5>
    132a:	e8 61 fd ff ff       	call   1090 <fflush@plt>
    132f:	eb 8f                	jmp    12c0 <main+0x200>
    1331:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1338:	c5 fb 10 0d 80 0e 00 	vmovsd 0xe80(%rip),%xmm1        # 21c0 <_IO_stdin_used+0x1c0>
    133f:	00 
    1340:	4c 8d 25 01 0d 00 00 	lea    0xd01(%rip),%r12        # 2048 <_IO_stdin_used+0x48>
    1347:	c5 f3 59 44 24 08    	vmulsd 0x8(%rsp),%xmm1,%xmm0
    134d:	4c 89 e7             	mov    %r12,%rdi
    1350:	c5 fb 59 d0          	vmulsd %xmm0,%xmm0,%xmm2
    1354:	c5 fb 11 44 24 08    	vmovsd %xmm0,0x8(%rsp)
    135a:	c4 e2 e9 9b 4c 24 10 	vfmsub132sd 0x10(%rsp),%xmm2,%xmm1
    1361:	c5 f3 51 c9          	vsqrtsd %xmm1,%xmm1,%xmm1
    1365:	c5 fb 11 0c 24       	vmovsd %xmm1,(%rsp)
    136a:	e8 d1 fc ff ff       	call   1040 <puts@plt>
    136f:	c5 fb 10 0c 24       	vmovsd (%rsp),%xmm1
    1374:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    137a:	4c 89 f2             	mov    %r14,%rdx
    137d:	48 8d 35 83 0d 00 00 	lea    0xd83(%rip),%rsi        # 2107 <_IO_stdin_used+0x107>
    1384:	48 8d 3d f5 0c 00 00 	lea    0xcf5(%rip),%rdi        # 2080 <_IO_stdin_used+0x80>
    138b:	b8 02 00 00 00       	mov    $0x2,%eax
    1390:	e8 cb fc ff ff       	call   1060 <printf@plt>
    1395:	4c 89 e7             	mov    %r12,%rdi
    1398:	e8 a3 fc ff ff       	call   1040 <puts@plt>
    139d:	48 89 ef             	mov    %rbp,%rdi
    13a0:	e8 8b fc ff ff       	call   1030 <free@plt>
    13a5:	48 83 c4 38          	add    $0x38,%rsp
    13a9:	5b                   	pop    %rbx
    13aa:	5d                   	pop    %rbp
    13ab:	41 5c                	pop    %r12
    13ad:	41 5d                	pop    %r13
    13af:	41 5e                	pop    %r14
    13b1:	31 c0                	xor    %eax,%eax
    13b3:	41 5f                	pop    %r15
    13b5:	c3                   	ret    
    13b6:	4c 89 e0             	mov    %r12,%rax
    13b9:	4c 89 e2             	mov    %r12,%rdx
    13bc:	48 d1 e8             	shr    %rax
    13bf:	83 e2 01             	and    $0x1,%edx
    13c2:	48 09 d0             	or     %rdx,%rax
    13c5:	c4 e1 f2 2a c0       	vcvtsi2ss %rax,%xmm1,%xmm0
    13ca:	c5 fa 58 c0          	vaddss %xmm0,%xmm0,%xmm0
    13ce:	e9 0b fe ff ff       	jmp    11de <main+0x11e>
    13d3:	48 89 c2             	mov    %rax,%rdx
    13d6:	48 d1 ea             	shr    %rdx
    13d9:	83 e0 01             	and    $0x1,%eax
    13dc:	48 09 c2             	or     %rax,%rdx
    13df:	c4 e1 f2 2a ca       	vcvtsi2ss %rdx,%xmm1,%xmm1
    13e4:	c5 f2 58 c9          	vaddss %xmm1,%xmm1,%xmm1
    13e8:	e9 02 fe ff ff       	jmp    11ef <main+0x12f>
    13ed:	0f 1f 00             	nopl   (%rax)

00000000000013f0 <set_fast_math>:
    13f0:	f3 0f 1e fa          	endbr64 
    13f4:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
    13f9:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
    1400:	00 
    1401:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
    1406:	c3                   	ret    
    1407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    140e:	00 00 

0000000000001410 <_start>:
    1410:	f3 0f 1e fa          	endbr64 
    1414:	31 ed                	xor    %ebp,%ebp
    1416:	49 89 d1             	mov    %rdx,%r9
    1419:	5e                   	pop    %rsi
    141a:	48 89 e2             	mov    %rsp,%rdx
    141d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1421:	50                   	push   %rax
    1422:	54                   	push   %rsp
    1423:	4c 8d 05 46 07 00 00 	lea    0x746(%rip),%r8        # 1b70 <__libc_csu_fini>
    142a:	48 8d 0d cf 06 00 00 	lea    0x6cf(%rip),%rcx        # 1b00 <__libc_csu_init>
    1431:	48 8d 3d 88 fc ff ff 	lea    -0x378(%rip),%rdi        # 10c0 <main>
    1438:	ff 15 a2 2b 00 00    	call   *0x2ba2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    143e:	f4                   	hlt    
    143f:	90                   	nop

0000000000001440 <deregister_tm_clones>:
    1440:	48 8d 3d 29 2c 00 00 	lea    0x2c29(%rip),%rdi        # 4070 <stdout@@GLIBC_2.2.5>
    1447:	48 8d 05 22 2c 00 00 	lea    0x2c22(%rip),%rax        # 4070 <stdout@@GLIBC_2.2.5>
    144e:	48 39 f8             	cmp    %rdi,%rax
    1451:	74 15                	je     1468 <deregister_tm_clones+0x28>
    1453:	48 8b 05 7e 2b 00 00 	mov    0x2b7e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    145a:	48 85 c0             	test   %rax,%rax
    145d:	74 09                	je     1468 <deregister_tm_clones+0x28>
    145f:	ff e0                	jmp    *%rax
    1461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1468:	c3                   	ret    
    1469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001470 <register_tm_clones>:
    1470:	48 8d 3d f9 2b 00 00 	lea    0x2bf9(%rip),%rdi        # 4070 <stdout@@GLIBC_2.2.5>
    1477:	48 8d 35 f2 2b 00 00 	lea    0x2bf2(%rip),%rsi        # 4070 <stdout@@GLIBC_2.2.5>
    147e:	48 29 fe             	sub    %rdi,%rsi
    1481:	48 89 f0             	mov    %rsi,%rax
    1484:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1488:	48 c1 f8 03          	sar    $0x3,%rax
    148c:	48 01 c6             	add    %rax,%rsi
    148f:	48 d1 fe             	sar    %rsi
    1492:	74 14                	je     14a8 <register_tm_clones+0x38>
    1494:	48 8b 05 55 2b 00 00 	mov    0x2b55(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    149b:	48 85 c0             	test   %rax,%rax
    149e:	74 08                	je     14a8 <register_tm_clones+0x38>
    14a0:	ff e0                	jmp    *%rax
    14a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14a8:	c3                   	ret    
    14a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014b0 <__do_global_dtors_aux>:
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	80 3d bd 2b 00 00 00 	cmpb   $0x0,0x2bbd(%rip)        # 4078 <completed.0>
    14bb:	75 33                	jne    14f0 <__do_global_dtors_aux+0x40>
    14bd:	55                   	push   %rbp
    14be:	48 83 3d 32 2b 00 00 	cmpq   $0x0,0x2b32(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    14c5:	00 
    14c6:	48 89 e5             	mov    %rsp,%rbp
    14c9:	74 0d                	je     14d8 <__do_global_dtors_aux+0x28>
    14cb:	48 8b 3d 96 2b 00 00 	mov    0x2b96(%rip),%rdi        # 4068 <__dso_handle>
    14d2:	ff 15 20 2b 00 00    	call   *0x2b20(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    14d8:	e8 63 ff ff ff       	call   1440 <deregister_tm_clones>
    14dd:	c6 05 94 2b 00 00 01 	movb   $0x1,0x2b94(%rip)        # 4078 <completed.0>
    14e4:	5d                   	pop    %rbp
    14e5:	c3                   	ret    
    14e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    14ed:	00 00 00 
    14f0:	c3                   	ret    
    14f1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    14f8:	00 00 00 00 
    14fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001500 <frame_dummy>:
    1500:	f3 0f 1e fa          	endbr64 
    1504:	e9 67 ff ff ff       	jmp    1470 <register_tm_clones>
    1509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001510 <init>:
    1510:	48 85 f6             	test   %rsi,%rsi
    1513:	0f 84 07 01 00 00    	je     1620 <init+0x110>
    1519:	41 55                	push   %r13
    151b:	41 54                	push   %r12
    151d:	49 89 f4             	mov    %rsi,%r12
    1520:	55                   	push   %rbp
    1521:	48 89 fd             	mov    %rdi,%rbp
    1524:	53                   	push   %rbx
    1525:	31 db                	xor    %ebx,%ebx
    1527:	48 83 ec 18          	sub    $0x18,%rsp
    152b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1530:	e8 7b fb ff ff       	call   10b0 <rand@plt>
    1535:	4c 63 e8             	movslq %eax,%r13
    1538:	e8 73 fb ff ff       	call   10b0 <rand@plt>
    153d:	48 98                	cltq   
    153f:	c7 44 24 0c 00 00 00 	movl   $0x30000000,0xc(%rsp)
    1546:	30 
    1547:	49 39 c5             	cmp    %rax,%r13
    154a:	77 0e                	ja     155a <init+0x4a>
    154c:	c5 fa 10 1d d0 0b 00 	vmovss 0xbd0(%rip),%xmm3        # 2124 <_IO_stdin_used+0x124>
    1553:	00 
    1554:	c5 fa 11 5c 24 0c    	vmovss %xmm3,0xc(%rsp)
    155a:	e8 51 fb ff ff       	call   10b0 <rand@plt>
    155f:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    1563:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    1567:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    156b:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    1571:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1576:	e8 35 fb ff ff       	call   10b0 <rand@plt>
    157b:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    157f:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    1583:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    1587:	c5 fa 59 05 91 0b 00 	vmulss 0xb91(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    158e:	00 
    158f:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1594:	e8 17 fb ff ff       	call   10b0 <rand@plt>
    1599:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    159d:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    15a1:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    15a5:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    15ab:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    15b0:	e8 fb fa ff ff       	call   10b0 <rand@plt>
    15b5:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    15b9:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    15bd:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    15c1:	c5 fa 59 05 57 0b 00 	vmulss 0xb57(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    15c8:	00 
    15c9:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    15ce:	e8 dd fa ff ff       	call   10b0 <rand@plt>
    15d3:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    15d7:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    15db:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    15df:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    15e5:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    15ea:	e8 c1 fa ff ff       	call   10b0 <rand@plt>
    15ef:	c5 f0 57 c9          	vxorps %xmm1,%xmm1,%xmm1
    15f3:	c5 f2 2a c0          	vcvtsi2ss %eax,%xmm1,%xmm0
    15f7:	48 8b 55 28          	mov    0x28(%rbp),%rdx
    15fb:	c5 fa 59 05 1d 0b 00 	vmulss 0xb1d(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    1602:	00 
    1603:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1608:	48 ff c3             	inc    %rbx
    160b:	49 39 dc             	cmp    %rbx,%r12
    160e:	0f 85 1c ff ff ff    	jne    1530 <init+0x20>
    1614:	48 83 c4 18          	add    $0x18,%rsp
    1618:	5b                   	pop    %rbx
    1619:	5d                   	pop    %rbp
    161a:	41 5c                	pop    %r12
    161c:	41 5d                	pop    %r13
    161e:	c3                   	ret    
    161f:	90                   	nop
    1620:	c3                   	ret    
    1621:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1628:	00 00 00 00 
    162c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001630 <move_particles>:
    1630:	55                   	push   %rbp
    1631:	48 89 e5             	mov    %rsp,%rbp
    1634:	41 57                	push   %r15
    1636:	41 56                	push   %r14
    1638:	41 55                	push   %r13
    163a:	41 54                	push   %r12
    163c:	53                   	push   %rbx
    163d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
    1641:	c5 fa 11 44 24 f0    	vmovss %xmm0,-0x10(%rsp)
    1647:	48 85 f6             	test   %rsi,%rsi
    164a:	0f 84 82 04 00 00    	je     1ad2 <move_particles+0x4a2>
    1650:	49 89 f6             	mov    %rsi,%r14
    1653:	4c 89 f0             	mov    %r14,%rax
    1656:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    165a:	4c 8b 57 20          	mov    0x20(%rdi),%r10
    165e:	48 8b 0f             	mov    (%rdi),%rcx
    1661:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    1665:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    1669:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    166d:	48 c1 e8 03          	shr    $0x3,%rax
    1671:	4c 89 f7             	mov    %r14,%rdi
    1674:	48 c1 e0 05          	shl    $0x5,%rax
    1678:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    167c:	4d 8d 5e ff          	lea    -0x1(%r14),%r11
    1680:	49 89 c5             	mov    %rax,%r13
    1683:	c5 7c 28 3d b5 0a 00 	vmovaps 0xab5(%rip),%ymm15        # 2140 <_IO_stdin_used+0x140>
    168a:	00 
    168b:	48 89 f8             	mov    %rdi,%rax
    168e:	c5 7c 28 35 ca 0a 00 	vmovaps 0xaca(%rip),%ymm14        # 2160 <_IO_stdin_used+0x160>
    1695:	00 
    1696:	c5 7c 28 2d e2 0a 00 	vmovaps 0xae2(%rip),%ymm13        # 2180 <_IO_stdin_used+0x180>
    169d:	00 
    169e:	4d 89 d4             	mov    %r10,%r12
    16a1:	4c 89 cf             	mov    %r9,%rdi
    16a4:	31 d2                	xor    %edx,%edx
    16a6:	c4 41 18 57 e4       	vxorps %xmm12,%xmm12,%xmm12
    16ab:	4d 89 da             	mov    %r11,%r10
    16ae:	49 89 c1             	mov    %rax,%r9
    16b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    16b8:	c5 fa 10 1c 91       	vmovss (%rcx,%rdx,4),%xmm3
    16bd:	c5 fa 10 3c 96       	vmovss (%rsi,%rdx,4),%xmm7
    16c2:	c4 c1 7a 10 34 90    	vmovss (%r8,%rdx,4),%xmm6
    16c8:	c5 fa 11 5c 24 fc    	vmovss %xmm3,-0x4(%rsp)
    16ce:	c5 fa 11 7c 24 f8    	vmovss %xmm7,-0x8(%rsp)
    16d4:	c5 fa 11 74 24 f4    	vmovss %xmm6,-0xc(%rsp)
    16da:	49 83 fa 06          	cmp    $0x6,%r10
    16de:	0f 86 04 04 00 00    	jbe    1ae8 <move_particles+0x4b8>
    16e4:	c4 41 38 57 c0       	vxorps %xmm8,%xmm8,%xmm8
    16e9:	c4 62 7d 18 d7       	vbroadcastss %xmm7,%ymm10
    16ee:	c4 62 7d 18 ce       	vbroadcastss %xmm6,%ymm9
    16f3:	c4 62 7d 18 db       	vbroadcastss %xmm3,%ymm11
    16f8:	31 c0                	xor    %eax,%eax
    16fa:	c5 7c 29 c7          	vmovaps %ymm8,%ymm7
    16fe:	c5 7c 29 c6          	vmovaps %ymm8,%ymm6
    1702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1708:	c5 fc 10 14 06       	vmovups (%rsi,%rax,1),%ymm2
    170d:	c4 c1 7c 10 2c 00    	vmovups (%r8,%rax,1),%ymm5
    1713:	c4 c1 6c 5c d2       	vsubps %ymm10,%ymm2,%ymm2
    1718:	c5 fc 10 1c 01       	vmovups (%rcx,%rax,1),%ymm3
    171d:	c4 c1 54 5c c9       	vsubps %ymm9,%ymm5,%ymm1
    1722:	c5 ec 59 c2          	vmulps %ymm2,%ymm2,%ymm0
    1726:	c4 c1 64 5c db       	vsubps %ymm11,%ymm3,%ymm3
    172b:	c5 fc 28 e1          	vmovaps %ymm1,%ymm4
    172f:	c4 e2 05 98 e1       	vfmadd132ps %ymm1,%ymm15,%ymm4
    1734:	48 83 c0 20          	add    $0x20,%rax
    1738:	c4 e2 65 b8 c3       	vfmadd231ps %ymm3,%ymm3,%ymm0
    173d:	c5 fc 58 c4          	vaddps %ymm4,%ymm0,%ymm0
    1741:	c5 fc 52 e0          	vrsqrtps %ymm0,%ymm4
    1745:	c5 9c c2 e8 04       	vcmpneqps %ymm0,%ymm12,%ymm5
    174a:	c5 dc 54 e5          	vandps %ymm5,%ymm4,%ymm4
    174e:	c5 dc 59 e8          	vmulps %ymm0,%ymm4,%ymm5
    1752:	c4 e2 0d 98 e5       	vfmadd132ps %ymm5,%ymm14,%ymm4
    1757:	c4 c1 54 59 ed       	vmulps %ymm13,%ymm5,%ymm5
    175c:	c5 dc 59 e5          	vmulps %ymm5,%ymm4,%ymm4
    1760:	c5 dc 59 e0          	vmulps %ymm0,%ymm4,%ymm4
    1764:	c5 fc 53 c4          	vrcpps %ymm4,%ymm0
    1768:	c5 fc 59 e4          	vmulps %ymm4,%ymm0,%ymm4
    176c:	c5 fc 59 e4          	vmulps %ymm4,%ymm0,%ymm4
    1770:	c5 fc 58 c0          	vaddps %ymm0,%ymm0,%ymm0
    1774:	c5 fc 5c c4          	vsubps %ymm4,%ymm0,%ymm0
    1778:	c4 e2 7d b8 f3       	vfmadd231ps %ymm3,%ymm0,%ymm6
    177d:	c4 e2 7d b8 fa       	vfmadd231ps %ymm2,%ymm0,%ymm7
    1782:	c4 62 7d b8 c1       	vfmadd231ps %ymm1,%ymm0,%ymm8
    1787:	4c 39 e8             	cmp    %r13,%rax
    178a:	0f 85 78 ff ff ff    	jne    1708 <move_particles+0xd8>
    1790:	c4 63 7d 19 c1 01    	vextractf128 $0x1,%ymm8,%xmm1
    1796:	c4 c1 70 58 c8       	vaddps %xmm8,%xmm1,%xmm1
    179b:	c5 f0 12 c1          	vmovhlps %xmm1,%xmm1,%xmm0
    179f:	c5 f8 58 c1          	vaddps %xmm1,%xmm0,%xmm0
    17a3:	c4 e3 7d 19 f9 01    	vextractf128 $0x1,%ymm7,%xmm1
    17a9:	c5 f0 58 cf          	vaddps %xmm7,%xmm1,%xmm1
    17ad:	c5 f8 c6 d8 55       	vshufps $0x55,%xmm0,%xmm0,%xmm3
    17b2:	c5 e0 58 d8          	vaddps %xmm0,%xmm3,%xmm3
    17b6:	c5 f0 12 c1          	vmovhlps %xmm1,%xmm1,%xmm0
    17ba:	c5 f8 58 c1          	vaddps %xmm1,%xmm0,%xmm0
    17be:	c4 e3 7d 19 f1 01    	vextractf128 $0x1,%ymm6,%xmm1
    17c4:	c5 f0 58 ce          	vaddps %xmm6,%xmm1,%xmm1
    17c8:	c5 f8 c6 e0 55       	vshufps $0x55,%xmm0,%xmm0,%xmm4
    17cd:	c5 d8 58 e0          	vaddps %xmm0,%xmm4,%xmm4
    17d1:	c5 f0 12 c1          	vmovhlps %xmm1,%xmm1,%xmm0
    17d5:	c5 f8 58 c1          	vaddps %xmm1,%xmm0,%xmm0
    17d9:	c5 f8 c6 e8 55       	vshufps $0x55,%xmm0,%xmm0,%xmm5
    17de:	c5 d0 58 e8          	vaddps %xmm0,%xmm5,%xmm5
    17e2:	4d 39 ce             	cmp    %r9,%r14
    17e5:	0f 84 56 02 00 00    	je     1a41 <move_particles+0x411>
    17eb:	4c 89 c8             	mov    %r9,%rax
    17ee:	4d 89 f3             	mov    %r14,%r11
    17f1:	49 29 c3             	sub    %rax,%r11
    17f4:	49 8d 5b ff          	lea    -0x1(%r11),%rbx
    17f8:	48 83 fb 02          	cmp    $0x2,%rbx
    17fc:	0f 86 f1 00 00 00    	jbe    18f3 <move_particles+0x2c3>
    1802:	c5 f8 10 3c 81       	vmovups (%rcx,%rax,4),%xmm7
    1807:	c4 e2 79 18 44 24 fc 	vbroadcastss -0x4(%rsp),%xmm0
    180e:	c4 41 30 57 c9       	vxorps %xmm9,%xmm9,%xmm9
    1813:	c5 c0 5c c8          	vsubps %xmm0,%xmm7,%xmm1
    1817:	c5 f8 10 3c 86       	vmovups (%rsi,%rax,4),%xmm7
    181c:	c4 e2 79 18 44 24 f8 	vbroadcastss -0x8(%rsp),%xmm0
    1823:	4c 89 db             	mov    %r11,%rbx
    1826:	c5 c0 5c d0          	vsubps %xmm0,%xmm7,%xmm2
    182a:	c4 e2 79 18 44 24 f4 	vbroadcastss -0xc(%rsp),%xmm0
    1831:	c4 c1 78 10 3c 80    	vmovups (%r8,%rax,4),%xmm7
    1837:	48 83 e3 fc          	and    $0xfffffffffffffffc,%rbx
    183b:	c5 c0 5c f8          	vsubps %xmm0,%xmm7,%xmm7
    183f:	c5 e8 59 c2          	vmulps %xmm2,%xmm2,%xmm0
    1843:	48 01 d8             	add    %rbx,%rax
    1846:	c5 f8 28 f7          	vmovaps %xmm7,%xmm6
    184a:	c4 e2 41 a8 35 ed 08 	vfmadd213ps 0x8ed(%rip),%xmm7,%xmm6        # 2140 <_IO_stdin_used+0x140>
    1851:	00 00 
    1853:	c4 e2 71 b8 c1       	vfmadd231ps %xmm1,%xmm1,%xmm0
    1858:	c5 f8 58 c6          	vaddps %xmm6,%xmm0,%xmm0
    185c:	c5 f8 52 f0          	vrsqrtps %xmm0,%xmm6
    1860:	c5 30 c2 c0 04       	vcmpneqps %xmm0,%xmm9,%xmm8
    1865:	c4 c1 48 54 f0       	vandps %xmm8,%xmm6,%xmm6
    186a:	c5 48 59 c0          	vmulps %xmm0,%xmm6,%xmm8
    186e:	c4 e2 39 a8 35 e9 08 	vfmadd213ps 0x8e9(%rip),%xmm8,%xmm6        # 2160 <_IO_stdin_used+0x160>
    1875:	00 00 
    1877:	c5 38 59 05 01 09 00 	vmulps 0x901(%rip),%xmm8,%xmm8        # 2180 <_IO_stdin_used+0x180>
    187e:	00 
    187f:	c4 c1 48 59 f0       	vmulps %xmm8,%xmm6,%xmm6
    1884:	c5 f8 59 c6          	vmulps %xmm6,%xmm0,%xmm0
    1888:	c5 78 53 c0          	vrcpps %xmm0,%xmm8
    188c:	c5 b8 59 c0          	vmulps %xmm0,%xmm8,%xmm0
    1890:	c5 b8 59 c0          	vmulps %xmm0,%xmm8,%xmm0
    1894:	c4 41 38 58 c0       	vaddps %xmm8,%xmm8,%xmm8
    1899:	c5 38 5c c0          	vsubps %xmm0,%xmm8,%xmm8
    189d:	c5 b8 59 c1          	vmulps %xmm1,%xmm8,%xmm0
    18a1:	c5 b8 59 ca          	vmulps %xmm2,%xmm8,%xmm1
    18a5:	c5 38 59 c7          	vmulps %xmm7,%xmm8,%xmm8
    18a9:	c4 c1 38 12 f0       	vmovhlps %xmm8,%xmm8,%xmm6
    18ae:	c4 c1 48 58 f0       	vaddps %xmm8,%xmm6,%xmm6
    18b3:	c5 c8 c6 d6 55       	vshufps $0x55,%xmm6,%xmm6,%xmm2
    18b8:	c5 e8 58 d6          	vaddps %xmm6,%xmm2,%xmm2
    18bc:	c5 e2 58 da          	vaddss %xmm2,%xmm3,%xmm3
    18c0:	c5 f0 12 d1          	vmovhlps %xmm1,%xmm1,%xmm2
    18c4:	c5 e8 58 d1          	vaddps %xmm1,%xmm2,%xmm2
    18c8:	c5 e8 c6 ca 55       	vshufps $0x55,%xmm2,%xmm2,%xmm1
    18cd:	c5 f0 58 ca          	vaddps %xmm2,%xmm1,%xmm1
    18d1:	c5 da 58 e1          	vaddss %xmm1,%xmm4,%xmm4
    18d5:	c5 f8 12 c8          	vmovhlps %xmm0,%xmm0,%xmm1
    18d9:	c5 f0 58 c8          	vaddps %xmm0,%xmm1,%xmm1
    18dd:	c5 f0 c6 c1 55       	vshufps $0x55,%xmm1,%xmm1,%xmm0
    18e2:	c5 f8 58 c1          	vaddps %xmm1,%xmm0,%xmm0
    18e6:	c5 d2 58 e8          	vaddss %xmm0,%xmm5,%xmm5
    18ea:	49 39 db             	cmp    %rbx,%r11
    18ed:	0f 84 4e 01 00 00    	je     1a41 <move_particles+0x411>
    18f3:	c5 fa 10 14 86       	vmovss (%rsi,%rax,4),%xmm2
    18f8:	c5 7a 10 5c 24 f8    	vmovss -0x8(%rsp),%xmm11
    18fe:	c5 fa 10 34 81       	vmovss (%rcx,%rax,4),%xmm6
    1903:	c4 c1 6a 5c d3       	vsubss %xmm11,%xmm2,%xmm2
    1908:	c5 7a 10 54 24 fc    	vmovss -0x4(%rsp),%xmm10
    190e:	c4 c1 7a 10 0c 80    	vmovss (%r8,%rax,4),%xmm1
    1914:	c5 ea 59 c2          	vmulss %xmm2,%xmm2,%xmm0
    1918:	c5 7a 10 4c 24 f4    	vmovss -0xc(%rsp),%xmm9
    191e:	c4 c1 4a 5c f2       	vsubss %xmm10,%xmm6,%xmm6
    1923:	c4 c1 72 5c c9       	vsubss %xmm9,%xmm1,%xmm1
    1928:	c5 fa 10 3d 10 08 00 	vmovss 0x810(%rip),%xmm7        # 2140 <_IO_stdin_used+0x140>
    192f:	00 
    1930:	c4 e2 49 b9 c6       	vfmadd231ss %xmm6,%xmm6,%xmm0
    1935:	c4 e2 71 b9 f9       	vfmadd231ss %xmm1,%xmm1,%xmm7
    193a:	48 8d 58 01          	lea    0x1(%rax),%rbx
    193e:	4c 8d 1c 85 00 00 00 	lea    0x0(,%rax,4),%r11
    1945:	00 
    1946:	c5 fa 58 c7          	vaddss %xmm7,%xmm0,%xmm0
    194a:	c5 fa 51 f8          	vsqrtss %xmm0,%xmm0,%xmm7
    194e:	c5 fa 59 c7          	vmulss %xmm7,%xmm0,%xmm0
    1952:	c5 fa 10 3d ce 07 00 	vmovss 0x7ce(%rip),%xmm7        # 2128 <_IO_stdin_used+0x128>
    1959:	00 
    195a:	c5 c2 5e c0          	vdivss %xmm0,%xmm7,%xmm0
    195e:	c4 e2 49 b9 e8       	vfmadd231ss %xmm0,%xmm6,%xmm5
    1963:	c4 e2 69 b9 e0       	vfmadd231ss %xmm0,%xmm2,%xmm4
    1968:	c4 e2 71 b9 d8       	vfmadd231ss %xmm0,%xmm1,%xmm3
    196d:	49 39 de             	cmp    %rbx,%r14
    1970:	0f 86 cb 00 00 00    	jbe    1a41 <move_particles+0x411>
    1976:	c4 a1 7a 10 54 1e 04 	vmovss 0x4(%rsi,%r11,1),%xmm2
    197d:	c4 a1 7a 10 74 19 04 	vmovss 0x4(%rcx,%r11,1),%xmm6
    1984:	c4 c1 6a 5c d3       	vsubss %xmm11,%xmm2,%xmm2
    1989:	c4 81 7a 10 4c 18 04 	vmovss 0x4(%r8,%r11,1),%xmm1
    1990:	c4 c1 4a 5c f2       	vsubss %xmm10,%xmm6,%xmm6
    1995:	c5 ea 59 fa          	vmulss %xmm2,%xmm2,%xmm7
    1999:	c4 c1 72 5c c9       	vsubss %xmm9,%xmm1,%xmm1
    199e:	c5 fa 10 05 9a 07 00 	vmovss 0x79a(%rip),%xmm0        # 2140 <_IO_stdin_used+0x140>
    19a5:	00 
    19a6:	48 83 c0 02          	add    $0x2,%rax
    19aa:	c4 e2 71 b9 c1       	vfmadd231ss %xmm1,%xmm1,%xmm0
    19af:	c4 e2 49 b9 fe       	vfmadd231ss %xmm6,%xmm6,%xmm7
    19b4:	c5 c2 58 f8          	vaddss %xmm0,%xmm7,%xmm7
    19b8:	c5 c2 51 c7          	vsqrtss %xmm7,%xmm7,%xmm0
    19bc:	c5 fa 59 c7          	vmulss %xmm7,%xmm0,%xmm0
    19c0:	c5 fa 10 3d 60 07 00 	vmovss 0x760(%rip),%xmm7        # 2128 <_IO_stdin_used+0x128>
    19c7:	00 
    19c8:	c5 c2 5e c0          	vdivss %xmm0,%xmm7,%xmm0
    19cc:	c4 e2 79 b9 ee       	vfmadd231ss %xmm6,%xmm0,%xmm5
    19d1:	c4 e2 79 b9 e2       	vfmadd231ss %xmm2,%xmm0,%xmm4
    19d6:	c4 e2 79 b9 d9       	vfmadd231ss %xmm1,%xmm0,%xmm3
    19db:	49 39 c6             	cmp    %rax,%r14
    19de:	76 61                	jbe    1a41 <move_particles+0x411>
    19e0:	c4 a1 7a 10 54 1e 08 	vmovss 0x8(%rsi,%r11,1),%xmm2
    19e7:	c4 a1 7a 10 4c 19 08 	vmovss 0x8(%rcx,%r11,1),%xmm1
    19ee:	c4 c1 6a 5c d3       	vsubss %xmm11,%xmm2,%xmm2
    19f3:	c4 81 7a 10 74 18 08 	vmovss 0x8(%r8,%r11,1),%xmm6
    19fa:	c4 c1 72 5c ca       	vsubss %xmm10,%xmm1,%xmm1
    19ff:	c5 ea 59 c2          	vmulss %xmm2,%xmm2,%xmm0
    1a03:	c4 c1 4a 5c f1       	vsubss %xmm9,%xmm6,%xmm6
    1a08:	c5 fa 10 3d 30 07 00 	vmovss 0x730(%rip),%xmm7        # 2140 <_IO_stdin_used+0x140>
    1a0f:	00 
    1a10:	c4 e2 49 b9 fe       	vfmadd231ss %xmm6,%xmm6,%xmm7
    1a15:	c4 e2 71 b9 c1       	vfmadd231ss %xmm1,%xmm1,%xmm0
    1a1a:	c5 fa 58 c7          	vaddss %xmm7,%xmm0,%xmm0
    1a1e:	c5 fa 51 f8          	vsqrtss %xmm0,%xmm0,%xmm7
    1a22:	c5 fa 59 c7          	vmulss %xmm7,%xmm0,%xmm0
    1a26:	c5 fa 10 3d fa 06 00 	vmovss 0x6fa(%rip),%xmm7        # 2128 <_IO_stdin_used+0x128>
    1a2d:	00 
    1a2e:	c5 c2 5e c0          	vdivss %xmm0,%xmm7,%xmm0
    1a32:	c4 e2 71 b9 e8       	vfmadd231ss %xmm0,%xmm1,%xmm5
    1a37:	c4 e2 69 b9 e0       	vfmadd231ss %xmm0,%xmm2,%xmm4
    1a3c:	c4 e2 49 b9 d8       	vfmadd231ss %xmm0,%xmm6,%xmm3
    1a41:	c5 fa 10 7c 24 f0    	vmovss -0x10(%rsp),%xmm7
    1a47:	48 8d 42 01          	lea    0x1(%rdx),%rax
    1a4b:	c4 e2 41 a9 2c 97    	vfmadd213ss (%rdi,%rdx,4),%xmm7,%xmm5
    1a51:	c5 fa 11 2c 97       	vmovss %xmm5,(%rdi,%rdx,4)
    1a56:	c4 c2 41 a9 24 94    	vfmadd213ss (%r12,%rdx,4),%xmm7,%xmm4
    1a5c:	c4 c1 7a 11 24 94    	vmovss %xmm4,(%r12,%rdx,4)
    1a62:	c4 c2 41 a9 1c 97    	vfmadd213ss (%r15,%rdx,4),%xmm7,%xmm3
    1a68:	c4 c1 7a 11 1c 97    	vmovss %xmm3,(%r15,%rdx,4)
    1a6e:	49 39 c6             	cmp    %rax,%r14
    1a71:	74 0d                	je     1a80 <move_particles+0x450>
    1a73:	48 89 c2             	mov    %rax,%rdx
    1a76:	e9 3d fc ff ff       	jmp    16b8 <move_particles+0x88>
    1a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1a80:	49 89 f9             	mov    %rdi,%r9
    1a83:	4d 89 e2             	mov    %r12,%r10
    1a86:	31 c0                	xor    %eax,%eax
    1a88:	c5 f8 28 c7          	vmovaps %xmm7,%xmm0
    1a8c:	0f 1f 40 00          	nopl   0x0(%rax)
    1a90:	c4 c1 7a 10 0c 81    	vmovss (%r9,%rax,4),%xmm1
    1a96:	48 89 c7             	mov    %rax,%rdi
    1a99:	c4 e2 79 a9 0c 81    	vfmadd213ss (%rcx,%rax,4),%xmm0,%xmm1
    1a9f:	c5 fa 11 0c 81       	vmovss %xmm1,(%rcx,%rax,4)
    1aa4:	c4 c1 7a 10 0c 82    	vmovss (%r10,%rax,4),%xmm1
    1aaa:	c4 e2 79 a9 0c 86    	vfmadd213ss (%rsi,%rax,4),%xmm0,%xmm1
    1ab0:	c5 fa 11 0c 86       	vmovss %xmm1,(%rsi,%rax,4)
    1ab5:	c4 c1 7a 10 0c 87    	vmovss (%r15,%rax,4),%xmm1
    1abb:	c4 c2 79 a9 0c 80    	vfmadd213ss (%r8,%rax,4),%xmm0,%xmm1
    1ac1:	c4 c1 7a 11 0c 80    	vmovss %xmm1,(%r8,%rax,4)
    1ac7:	48 ff c0             	inc    %rax
    1aca:	48 39 fa             	cmp    %rdi,%rdx
    1acd:	75 c1                	jne    1a90 <move_particles+0x460>
    1acf:	c5 f8 77             	vzeroupper 
    1ad2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1ad6:	5b                   	pop    %rbx
    1ad7:	41 5c                	pop    %r12
    1ad9:	41 5d                	pop    %r13
    1adb:	41 5e                	pop    %r14
    1add:	41 5f                	pop    %r15
    1adf:	5d                   	pop    %rbp
    1ae0:	c3                   	ret    
    1ae1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1ae8:	c5 e0 57 db          	vxorps %xmm3,%xmm3,%xmm3
    1aec:	31 c0                	xor    %eax,%eax
    1aee:	c5 f8 28 e3          	vmovaps %xmm3,%xmm4
    1af2:	c5 f8 28 eb          	vmovaps %xmm3,%xmm5
    1af6:	e9 f3 fc ff ff       	jmp    17ee <move_particles+0x1be>
    1afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001b00 <__libc_csu_init>:
    1b00:	f3 0f 1e fa          	endbr64 
    1b04:	41 57                	push   %r15
    1b06:	4c 8d 3d a3 22 00 00 	lea    0x22a3(%rip),%r15        # 3db0 <__frame_dummy_init_array_entry>
    1b0d:	41 56                	push   %r14
    1b0f:	49 89 d6             	mov    %rdx,%r14
    1b12:	41 55                	push   %r13
    1b14:	49 89 f5             	mov    %rsi,%r13
    1b17:	41 54                	push   %r12
    1b19:	41 89 fc             	mov    %edi,%r12d
    1b1c:	55                   	push   %rbp
    1b1d:	48 8d 2d 9c 22 00 00 	lea    0x229c(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    1b24:	53                   	push   %rbx
    1b25:	4c 29 fd             	sub    %r15,%rbp
    1b28:	48 83 ec 08          	sub    $0x8,%rsp
    1b2c:	e8 cf f4 ff ff       	call   1000 <_init>
    1b31:	48 c1 fd 03          	sar    $0x3,%rbp
    1b35:	74 1f                	je     1b56 <__libc_csu_init+0x56>
    1b37:	31 db                	xor    %ebx,%ebx
    1b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1b40:	4c 89 f2             	mov    %r14,%rdx
    1b43:	4c 89 ee             	mov    %r13,%rsi
    1b46:	44 89 e7             	mov    %r12d,%edi
    1b49:	41 ff 14 df          	call   *(%r15,%rbx,8)
    1b4d:	48 83 c3 01          	add    $0x1,%rbx
    1b51:	48 39 dd             	cmp    %rbx,%rbp
    1b54:	75 ea                	jne    1b40 <__libc_csu_init+0x40>
    1b56:	48 83 c4 08          	add    $0x8,%rsp
    1b5a:	5b                   	pop    %rbx
    1b5b:	5d                   	pop    %rbp
    1b5c:	41 5c                	pop    %r12
    1b5e:	41 5d                	pop    %r13
    1b60:	41 5e                	pop    %r14
    1b62:	41 5f                	pop    %r15
    1b64:	c3                   	ret    
    1b65:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1b6c:	00 00 00 00 

0000000000001b70 <__libc_csu_fini>:
    1b70:	f3 0f 1e fa          	endbr64 
    1b74:	c3                   	ret    

Déassemblage de la section .fini :

0000000000001b78 <_fini>:
    1b78:	f3 0f 1e fa          	endbr64 
    1b7c:	48 83 ec 08          	sub    $0x8,%rsp
    1b80:	48 83 c4 08          	add    $0x8,%rsp
    1b84:	c3                   	ret    

Déassemblage de la section .rodata :

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	0a 1b                	or     (%rbx),%bl
    200a:	5b                   	pop    %rbx
    200b:	31 6d 54             	xor    %ebp,0x54(%rbp)
    200e:	6f                   	outsl  %ds:(%rsi),(%dx)
    200f:	74 61                	je     2072 <_IO_stdin_used+0x72>
    2011:	6c                   	insb   (%dx),%es:(%rdi)
    2012:	20 6d 65             	and    %ch,0x65(%rbp)
    2015:	6d                   	insl   (%dx),%es:(%rdi)
    2016:	6f                   	outsl  %ds:(%rsi),(%dx)
    2017:	72 79                	jb     2092 <_IO_stdin_used+0x92>
    2019:	20 73 69             	and    %dh,0x69(%rbx)
    201c:	7a 65                	jp     2083 <_IO_stdin_used+0x83>
    201e:	3a 1b                	cmp    (%rbx),%bl
    2020:	5b                   	pop    %rbx
    2021:	30 6d 20             	xor    %ch,0x20(%rbp)
    2024:	25 6c 6c 75 20       	and    $0x20756c6c,%eax
    2029:	42 2c 20             	rex.X sub $0x20,%al
    202c:	25 6c 6c 75 20       	and    $0x20756c6c,%eax
    2031:	4b 69 42 2c 20 25 6c 	rex.WXB imul $0x6c6c2520,0x2c(%r10),%rax
    2038:	6c 
    2039:	75 20                	jne    205b <_IO_stdin_used+0x5b>
    203b:	4d 69 42 0a 0a 00 00 	imul   $0xa,0xa(%r10),%r8
    2042:	00 
    2043:	00 00                	add    %al,(%rax)
    2045:	00 00                	add    %al,(%rax)
    2047:	00 2d 2d 2d 2d 2d    	add    %ch,0x2d2d2d2d(%rip)        # 2d2d4d7a <_end+0x2d2d0cfa>
    204d:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2052:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2057:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    205c:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2061:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2066:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    206b:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2070:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2075:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    207a:	2d 2d 2d 00 00       	sub    $0x2d2d,%eax
    207f:	00 1b                	add    %bl,(%rbx)
    2081:	5b                   	pop    %rbx
    2082:	31 6d 25             	xor    %ebp,0x25(%rbp)
    2085:	73 20                	jae    20a7 <_IO_stdin_used+0xa7>
    2087:	25 34 73 20 1b       	and    $0x1b207334,%eax
    208c:	5b                   	pop    %rbx
    208d:	34 32                	xor    $0x32,%al
    208f:	6d                   	insl   (%dx),%es:(%rdi)
    2090:	25 31 30 2e 31       	and    $0x312e3031,%eax
    2095:	6c                   	insb   (%dx),%es:(%rdi)
    2096:	66 20 2b             	data16 and %ch,(%rbx)
    2099:	2d 20 25 2e 31       	sub    $0x312e2520,%eax
    209e:	6c                   	insb   (%dx),%es:(%rdi)
    209f:	66 20 47 46          	data16 and %al,0x46(%rdi)
    20a3:	4c                   	rex.WR
    20a4:	4f 50                	rex.WRXB push %r8
    20a6:	2f                   	(bad)  
    20a7:	73 1b                	jae    20c4 <_IO_stdin_used+0xc4>
    20a9:	5b                   	pop    %rbx
    20aa:	30 6d 0a             	xor    %ch,0xa(%rbp)
    20ad:	00 47 46             	add    %al,0x46(%rdi)
    20b0:	4c                   	rex.WR
    20b1:	4f 50                	rex.WRXB push %r8
    20b3:	2f                   	(bad)  
    20b4:	73 00                	jae    20b6 <_IO_stdin_used+0xb6>
    20b6:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
    20b8:	74 65                	je     211f <_IO_stdin_used+0x11f>
    20ba:	72 61                	jb     211d <_IO_stdin_used+0x11d>
    20bc:	63 74 2f 73          	movsxd 0x73(%rdi,%rbp,1),%esi
    20c0:	00 54 69 6d          	add    %dl,0x6d(%rcx,%rbp,2)
    20c4:	65 2c 20             	gs sub $0x20,%al
    20c7:	73 00                	jae    20c9 <_IO_stdin_used+0xc9>
    20c9:	53                   	push   %rbx
    20ca:	74 65                	je     2131 <_IO_stdin_used+0x131>
    20cc:	70 00                	jo     20ce <_IO_stdin_used+0xce>
    20ce:	1b 5b 31             	sbb    0x31(%rbx),%ebx
    20d1:	6d                   	insl   (%dx),%es:(%rdi)
    20d2:	25 35 73 20 25       	and    $0x25207335,%eax
    20d7:	31 30                	xor    %esi,(%rax)
    20d9:	73 20                	jae    20fb <_IO_stdin_used+0xfb>
    20db:	25 31 30 73 20       	and    $0x20733031,%eax
    20e0:	25 38 73 1b 5b       	and    $0x5b1b7338,%eax
    20e5:	30 6d 0a             	xor    %ch,0xa(%rbp)
    20e8:	00 25 35 6c 6c 75    	add    %ah,0x756c6c35(%rip)        # 756c8d23 <_end+0x756c4ca3>
    20ee:	20 25 31 30 2e 33    	and    %ah,0x332e3031(%rip)        # 332e5125 <_end+0x332e10a5>
    20f4:	65 20 25 31 30 2e 33 	and    %ah,%gs:0x332e3031(%rip)        # 332e512c <_end+0x332e10ac>
    20fb:	65 20 25 38 2e 31 66 	and    %ah,%gs:0x66312e38(%rip)        # 66314f3a <_end+0x66310eba>
    2102:	20 25 73 0a 00 41    	and    %ah,0x41000a73(%rip)        # 41002b7b <_end+0x40ffeafb>
    2108:	76 65                	jbe    216f <_IO_stdin_used+0x16f>
    210a:	72 61                	jb     216d <_IO_stdin_used+0x16d>
    210c:	67 65 20 70 65       	and    %dh,%gs:0x65(%eax)
    2111:	72 66                	jb     2179 <_IO_stdin_used+0x179>
    2113:	6f                   	outsl  %ds:(%rsi),(%dx)
    2114:	72 6d                	jb     2183 <_IO_stdin_used+0x183>
    2116:	61                   	(bad)  
    2117:	6e                   	outsb  %ds:(%rsi),(%dx)
    2118:	63 65 3a             	movsxd 0x3a(%rbp),%esp
    211b:	00 2a                	add    %ch,(%rdx)
    211d:	00 00                	add    %al,(%rax)
    211f:	00 00                	add    %al,(%rax)
    2121:	00 00                	add    %al,(%rax)
    2123:	30 00                	xor    %al,(%rax)
    2125:	00 00                	add    %al,(%rax)
    2127:	b0 00                	mov    $0x0,%al
    2129:	00 80 3f 0a d7 23    	add    %al,0x23d70a3f(%rax)
    212f:	3c 00                	cmp    $0x0,%al
	...
    213d:	00 00                	add    %al,(%rax)
    213f:	00 08                	add    %cl,(%rax)
    2141:	e5 3c                	in     $0x3c,%eax
    2143:	1e                   	(bad)  
    2144:	08 e5                	or     %ah,%ch
    2146:	3c 1e                	cmp    $0x1e,%al
    2148:	08 e5                	or     %ah,%ch
    214a:	3c 1e                	cmp    $0x1e,%al
    214c:	08 e5                	or     %ah,%ch
    214e:	3c 1e                	cmp    $0x1e,%al
    2150:	08 e5                	or     %ah,%ch
    2152:	3c 1e                	cmp    $0x1e,%al
    2154:	08 e5                	or     %ah,%ch
    2156:	3c 1e                	cmp    $0x1e,%al
    2158:	08 e5                	or     %ah,%ch
    215a:	3c 1e                	cmp    $0x1e,%al
    215c:	08 e5                	or     %ah,%ch
    215e:	3c 1e                	cmp    $0x1e,%al
    2160:	00 00                	add    %al,(%rax)
    2162:	40 c0 00 00          	rex rolb $0x0,(%rax)
    2166:	40 c0 00 00          	rex rolb $0x0,(%rax)
    216a:	40 c0 00 00          	rex rolb $0x0,(%rax)
    216e:	40 c0 00 00          	rex rolb $0x0,(%rax)
    2172:	40 c0 00 00          	rex rolb $0x0,(%rax)
    2176:	40 c0 00 00          	rex rolb $0x0,(%rax)
    217a:	40 c0 00 00          	rex rolb $0x0,(%rax)
    217e:	40 c0 00 00          	rex rolb $0x0,(%rax)
    2182:	00 bf 00 00 00 bf    	add    %bh,-0x41000000(%rdi)
    2188:	00 00                	add    %al,(%rax)
    218a:	00 bf 00 00 00 bf    	add    %bh,-0x41000000(%rdi)
    2190:	00 00                	add    %al,(%rax)
    2192:	00 bf 00 00 00 bf    	add    %bh,-0x41000000(%rdi)
    2198:	00 00                	add    %al,(%rax)
    219a:	00 bf 00 00 00 bf    	add    %bh,-0x41000000(%rdi)
    21a0:	00 00                	add    %al,(%rax)
    21a2:	00 00                	add    %al,(%rax)
    21a4:	00 00                	add    %al,(%rax)
    21a6:	08 40 00             	or     %al,0x0(%rax)
    21a9:	00 00                	add    %al,(%rax)
    21ab:	00 00                	add    %al,(%rax)
    21ad:	00 38                	add    %bh,(%rax)
    21af:	40 95                	rex xchg %eax,%ebp
    21b1:	d6                   	(bad)  
    21b2:	26 e8 0b 2e 11 3e    	es call 3e114fc3 <_end+0x3e110f43>
    21b8:	00 00                	add    %al,(%rax)
    21ba:	00 00                	add    %al,(%rax)
    21bc:	00 00                	add    %al,(%rax)
    21be:	f0 3f                	lock (bad) 
    21c0:	92                   	xchg   %eax,%edx
    21c1:	24 49                	and    $0x49,%al
    21c3:	92                   	xchg   %eax,%edx
    21c4:	24 49                	and    $0x49,%al
    21c6:	c2                   	.byte 0xc2
    21c7:	3f                   	(bad)  

Déassemblage de la section .eh_frame_hdr :

00000000000021c8 <__GNU_EH_FRAME_HDR>:
    21c8:	01 1b                	add    %ebx,(%rbx)
    21ca:	03 3b                	add    (%rbx),%edi
    21cc:	4c 00 00             	rex.WR add %r8b,(%rax)
    21cf:	00 08                	add    %cl,(%rax)
    21d1:	00 00                	add    %al,(%rax)
    21d3:	00 58 ee             	add    %bl,-0x12(%rax)
    21d6:	ff                   	(bad)  
    21d7:	ff 80 00 00 00 f8    	incl   -0x8000000(%rax)
    21dd:	ee                   	out    %al,(%dx)
    21de:	ff                   	(bad)  
    21df:	ff 18                	lcall  *(%rax)
    21e1:	01 00                	add    %eax,(%rax)
    21e3:	00 28                	add    %ch,(%rax)
    21e5:	f2 ff                	repnz (bad) 
    21e7:	ff c8                	dec    %eax
    21e9:	01 00                	add    %eax,(%rax)
    21eb:	00 48 f2             	add    %cl,-0xe(%rax)
    21ee:	ff                   	(bad)  
    21ef:	ff 68 00             	ljmp   *0x0(%rax)
    21f2:	00 00                	add    %al,(%rax)
    21f4:	48                   	rex.W
    21f5:	f3 ff                	repz (bad) 
    21f7:	ff a8 00 00 00 68    	ljmp   *0x68000000(%rax)
    21fd:	f4                   	hlt    
    21fe:	ff                   	(bad)  
    21ff:	ff                   	(bad)  
    2200:	e8 00 00 00 38       	call   38002205 <_end+0x37ffe185>
    2205:	f9                   	stc    
    2206:	ff                   	(bad)  
    2207:	ff 68 01             	ljmp   *0x1(%rax)
    220a:	00 00                	add    %al,(%rax)
    220c:	a8 f9                	test   $0xf9,%al
    220e:	ff                   	(bad)  
    220f:	ff                   	.byte 0xff
    2210:	b0 01                	mov    $0x1,%al
	...

Déassemblage de la section .eh_frame :

0000000000002218 <__FRAME_END__-0x18c>:
    2218:	14 00                	adc    $0x0,%al
    221a:	00 00                	add    %al,(%rax)
    221c:	00 00                	add    %al,(%rax)
    221e:	00 00                	add    %al,(%rax)
    2220:	01 7a 52             	add    %edi,0x52(%rdx)
    2223:	00 01                	add    %al,(%rcx)
    2225:	78 10                	js     2237 <__GNU_EH_FRAME_HDR+0x6f>
    2227:	01 1b                	add    %ebx,(%rbx)
    2229:	0c 07                	or     $0x7,%al
    222b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2231:	00 00                	add    %al,(%rax)
    2233:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2236:	00 00                	add    %al,(%rax)
    2238:	d8 f1                	fdiv   %st(1),%st
    223a:	ff                   	(bad)  
    223b:	ff 2f                	ljmp   *(%rdi)
    223d:	00 00                	add    %al,(%rax)
    223f:	00 00                	add    %al,(%rax)
    2241:	44 07                	rex.R (bad) 
    2243:	10 00                	adc    %al,(%rax)
    2245:	00 00                	add    %al,(%rax)
    2247:	00 24 00             	add    %ah,(%rax,%rax,1)
    224a:	00 00                	add    %al,(%rax)
    224c:	34 00                	xor    $0x0,%al
    224e:	00 00                	add    %al,(%rax)
    2250:	d0 ed                	shr    %ch
    2252:	ff                   	(bad)  
    2253:	ff a0 00 00 00 00    	jmp    *0x0(%rax)
    2259:	0e                   	(bad)  
    225a:	10 46 0e             	adc    %al,0xe(%rsi)
    225d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2260:	0b 77 08             	or     0x8(%rdi),%esi
    2263:	80 00 3f             	addb   $0x3f,(%rax)
    2266:	1a 3b                	sbb    (%rbx),%bh
    2268:	2a 33                	sub    (%rbx),%dh
    226a:	24 22                	and    $0x22,%al
    226c:	00 00                	add    %al,(%rax)
    226e:	00 00                	add    %al,(%rax)
    2270:	3c 00                	cmp    $0x0,%al
    2272:	00 00                	add    %al,(%rax)
    2274:	5c                   	pop    %rsp
    2275:	00 00                	add    %al,(%rax)
    2277:	00 98 f2 ff ff 11    	add    %bl,0x11fffff2(%rax)
    227d:	01 00                	add    %eax,(%rax)
    227f:	00 00                	add    %al,(%rax)
    2281:	4b 0e                	rex.WXB (bad) 
    2283:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    2289:	8c 03                	mov    %es,(%rbx)
    228b:	44 0e                	rex.R (bad) 
    228d:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
    2293:	83 05 46 0e 40 02 ed 	addl   $0xffffffed,0x2400e46(%rip)        # 24030e0 <_end+0x23ff060>
    229a:	0e                   	(bad)  
    229b:	28 41 0e             	sub    %al,0xe(%rcx)
    229e:	20 41 0e             	and    %al,0xe(%rcx)
    22a1:	18 42 0e             	sbb    %al,0xe(%rdx)
    22a4:	10 42 0e             	adc    %al,0xe(%rdx)
    22a7:	08 42 c3             	or     %al,-0x3d(%rdx)
    22aa:	c6                   	(bad)  
    22ab:	cc                   	int3   
    22ac:	cd 00                	int    $0x0
    22ae:	00 00                	add    %al,(%rax)
    22b0:	2c 00                	sub    $0x0,%al
    22b2:	00 00                	add    %al,(%rax)
    22b4:	9c                   	pushf  
    22b5:	00 00                	add    %al,(%rax)
    22b7:	00 78 f3             	add    %bh,-0xd(%rax)
    22ba:	ff                   	(bad)  
    22bb:	ff cb                	dec    %ebx
    22bd:	04 00                	add    $0x0,%al
    22bf:	00 00                	add    %al,(%rax)
    22c1:	41 0e                	rex.B (bad) 
    22c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c9:	4d 8f 03             	rex.WRB pop (%r11)
    22cc:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
    22d3:	07                   	(bad)  
    22d4:	03 9f 04 0a 0c 07    	add    0x70c0a04(%rdi),%ebx
    22da:	08 48 0b             	or     %cl,0xb(%rax)
    22dd:	00 00                	add    %al,(%rax)
    22df:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    22e3:	00 cc                	add    %cl,%ah
    22e5:	00 00                	add    %al,(%rax)
    22e7:	00 d8                	add    %bl,%al
    22e9:	ed                   	in     (%dx),%eax
    22ea:	ff                   	(bad)  
    22eb:	ff 2d 03 00 00 00    	ljmp   *0x3(%rip)        # 22f4 <__GNU_EH_FRAME_HDR+0x12c>
    22f1:	42 0e                	rex.X (bad) 
    22f3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    22f9:	8e 03                	mov    (%rbx),%es
    22fb:	42 0e                	rex.X (bad) 
    22fd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    2303:	8c 05 47 0e 30 86    	mov    %es,-0x79cff1b9(%rip)        # ffffffff86303150 <_end+0xffffffff862ff0d0>
    2309:	06                   	(bad)  
    230a:	41 0e                	rex.B (bad) 
    230c:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
    2312:	03 d5                	add    %ebp,%edx
    2314:	02 0a                	add    (%rdx),%cl
    2316:	0e                   	(bad)  
    2317:	38 41 0e             	cmp    %al,0xe(%rcx)
    231a:	30 41 0e             	xor    %al,0xe(%rcx)
    231d:	28 42 0e             	sub    %al,0xe(%rdx)
    2320:	20 42 0e             	and    %al,0xe(%rdx)
    2323:	18 42 0e             	sbb    %al,0xe(%rdx)
    2326:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
    232a:	41 0b 00             	or     (%r8),%eax
    232d:	00 00                	add    %al,(%rax)
    232f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2333:	00 1c 01             	add    %bl,(%rcx,%rax,1)
    2336:	00 00                	add    %al,(%rax)
    2338:	c8 f7 ff ff          	enter  $0xfff7,$0xff
    233c:	65 00 00             	add    %al,%gs:(%rax)
    233f:	00 00                	add    %al,(%rax)
    2341:	46 0e                	rex.RX (bad) 
    2343:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2349:	8e 03                	mov    (%rbx),%es
    234b:	45 0e                	rex.RB (bad) 
    234d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2353:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630319d <_end+0xffffffff862ff11d>
    2359:	06                   	(bad)  
    235a:	48 0e                	rex.W (bad) 
    235c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2362:	6e                   	outsb  %ds:(%rsi),(%dx)
    2363:	0e                   	(bad)  
    2364:	38 41 0e             	cmp    %al,0xe(%rcx)
    2367:	30 41 0e             	xor    %al,0xe(%rcx)
    236a:	28 42 0e             	sub    %al,0xe(%rdx)
    236d:	20 42 0e             	and    %al,0xe(%rdx)
    2370:	18 42 0e             	sbb    %al,0xe(%rdx)
    2373:	10 42 0e             	adc    %al,0xe(%rdx)
    2376:	08 00                	or     %al,(%rax)
    2378:	14 00                	adc    $0x0,%al
    237a:	00 00                	add    %al,(%rax)
    237c:	64 01 00             	add    %eax,%fs:(%rax)
    237f:	00 f0                	add    %dh,%al
    2381:	f7 ff                	idiv   %edi
    2383:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2389 <__GNU_EH_FRAME_HDR+0x1c1>
    2389:	00 00                	add    %al,(%rax)
    238b:	00 00                	add    %al,(%rax)
    238d:	00 00                	add    %al,(%rax)
    238f:	00 10                	add    %dl,(%rax)
    2391:	00 00                	add    %al,(%rax)
    2393:	00 7c 01 00          	add    %bh,0x0(%rcx,%rax,1)
    2397:	00 58 f0             	add    %bl,-0x10(%rax)
    239a:	ff                   	(bad)  
    239b:	ff 17                	call   *(%rdi)
    239d:	00 00                	add    %al,(%rax)
    239f:	00 00                	add    %al,(%rax)
    23a1:	00 00                	add    %al,(%rax)
	...

00000000000023a4 <__FRAME_END__>:
    23a4:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .init_array :

0000000000003db0 <__frame_dummy_init_array_entry>:
    3db0:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3db6 <__frame_dummy_init_array_entry+0x6>
    3db6:	00 00                	add    %al,(%rax)
    3db8:	f0 13 00             	lock adc (%rax),%eax
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .fini_array :

0000000000003dc0 <__do_global_dtors_aux_fini_array_entry>:
    3dc0:	b0 14                	mov    $0x14,%al
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .dynamic :

0000000000003dc8 <_DYNAMIC>:
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	b6 00                	mov    $0x0,%dh
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	01 00                	add    %eax,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	c0 00 00             	rolb   $0x0,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 01                	add    %al,(%rcx)
    3de9:	00 00                	add    %al,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 cd                	add    %cl,%ch
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 01                	add    %al,(%rcx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 dd                	add    %bl,%ch
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 78 1b             	add    %bh,0x1b(%rax)
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	b0 3d                	mov    $0x3d,%al
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	1b 00                	sbb    (%rax),%eax
    3e3a:	00 00                	add    %al,(%rax)
    3e3c:	00 00                	add    %al,(%rax)
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	10 00                	adc    %al,(%rax)
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	1a 00                	sbb    (%rax),%al
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 3e57 <_DYNAMIC+0x8f>
    3e57:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 c0                	add    %al,%al
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0xb5>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 68 05             	add    %ch,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 e8                	add    %ch,%al
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 06                	add    %al,(%rsi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xf5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	rex add %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	d8 00                	fadds  (%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	14 00                	adc    $0x0,%al
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 d0                	add    %dl,%al
    3f01:	07                   	(bad)  
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 e0                	add    %ah,%al
    3f11:	06                   	(bad)  
    3f12:	00 00                	add    %al,(%rax)
    3f14:	00 00                	add    %al,(%rax)
    3f16:	00 00                	add    %al,(%rax)
    3f18:	08 00                	or     %al,(%rax)
    3f1a:	00 00                	add    %al,(%rax)
    3f1c:	00 00                	add    %al,(%rax)
    3f1e:	00 00                	add    %al,(%rax)
    3f20:	f0 00 00             	lock add %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 90 06 00 00 00    	add    %dl,0x6(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 ff                	add    %bh,%bh
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 02                	add    %al,(%rdx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 6e 06             	add    %ch,0x6(%rsi)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Déassemblage de la section .got :

0000000000003fd8 <.got>:
	...

Déassemblage de la section .got.plt :

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	c8 3d 00 00          	enter  $0x3d,$0x0
	...
    4018:	36 10 00             	ss adc %al,(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .data :

0000000000004060 <__data_start>:
	...

0000000000004068 <__dso_handle>:
    4068:	68 40 00 00 00       	push   $0x40
    406d:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .bss :

0000000000004070 <stdout@GLIBC_2.2.5>:
	...

0000000000004078 <completed.0>:
	...

Déassemblage de la section .comment :

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 31                	xor    %esi,(%rcx)
   d:	2e 31 2e             	cs xor %ebp,(%rsi)
  10:	30 00                	xor    %al,(%rax)

Déassemblage de la section .debug_aranges :

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	f0 13 00             	lock adc (%rax),%eax
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 17                	add    %dl,(%rdi)
	...

Déassemblage de la section .debug_info :

0000000000000000 <.debug_info>:
   0:	61                   	(bad)  
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <_end+0x7c089>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	21 00                	and    %eax,(%rax)
   f:	00 00                	add    %al,(%rax)
  11:	1d 00 00 00 00       	sbb    $0x0,%eax
  16:	34 00                	xor    $0x0,%al
  18:	00 00                	add    %al,(%rax)
  1a:	0c 00                	or     $0x0,%al
	...
  28:	00 00                	add    %al,(%rax)
  2a:	02 13                	add    (%rbx),%dl
  2c:	00 00                	add    %al,(%rax)
  2e:	00 01                	add    %al,(%rcx)
  30:	53                   	push   %rbx
  31:	01 f0                	add    %esi,%eax
  33:	13 00                	adc    (%rax),%eax
  35:	00 00                	add    %al,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	00 17                	add    %dl,(%rdi)
  3b:	00 00                	add    %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
  3f:	00 00                	add    %al,(%rax)
  41:	00 01                	add    %al,(%rcx)
  43:	9c                   	pushf  
  44:	5d                   	pop    %rbp
  45:	00 00                	add    %al,(%rax)
  47:	00 03                	add    %al,(%rbx)
  49:	00 00                	add    %al,(%rax)
  4b:	00 00                	add    %al,(%rax)
  4d:	01 5e 10             	add    %ebx,0x10(%rsi)
  50:	5d                   	pop    %rbp
  51:	00 00                	add    %al,(%rax)
  53:	00 12                	add    %dl,(%rdx)
  55:	00 00                	add    %al,(%rax)
  57:	00 0c 00             	add    %cl,(%rax,%rax,1)
  5a:	00 00                	add    %al,(%rax)
  5c:	00 04 04             	add    %al,(%rsp,%rax,1)
  5f:	07                   	(bad)  
  60:	06                   	(bad)  
  61:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .debug_abbrev :

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x30ad296>
   8:	1f                   	(bad)  
   9:	1b 1f                	sbb    (%rdi),%ebx
   b:	55                   	push   %rbp
   c:	17                   	(bad)  
   d:	11 01                	adc    %eax,(%rcx)
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 2e                	add    (%rsi),%ch
  15:	01 03                	add    %eax,(%rbx)
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	39 0b                	cmp    %ecx,(%rbx)
  1e:	27                   	(bad)  
  1f:	19 11                	sbb    %edx,(%rcx)
  21:	01 12                	add    %edx,(%rdx)
  23:	07                   	(bad)  
  24:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  28:	01 13                	add    %edx,(%rbx)
  2a:	00 00                	add    %al,(%rax)
  2c:	03 34 00             	add    (%rax,%rax,1),%esi
  2f:	03 0e                	add    (%rsi),%ecx
  31:	3a 0b                	cmp    (%rbx),%cl
  33:	3b 0b                	cmp    (%rbx),%ecx
  35:	39 0b                	cmp    %ecx,(%rbx)
  37:	49 13 02             	adc    (%r10),%rax
  3a:	17                   	(bad)  
  3b:	b7 42                	mov    $0x42,%bh
  3d:	17                   	(bad)  
  3e:	00 00                	add    %al,(%rax)
  40:	04 24                	add    $0x24,%al
  42:	00 0b                	add    %cl,(%rbx)
  44:	0b 3e                	or     (%rsi),%edi
  46:	0b 03                	or     (%rbx),%eax
  48:	0e                   	(bad)  
  49:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .debug_line :

0000000000000000 <.debug_line>:
   0:	5f                   	pop    %rdi
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 2e    	add    %al,0x2e000800(%rip)        # 2e000809 <_end+0x2dffc789>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)  
  21:	02 34 00             	add    (%rax,%rax,1),%dh
  24:	00 00                	add    %al,(%rax)
  26:	68 00 00 00 02       	push   $0x2000000
  2b:	01 1f                	add    %ebx,(%rdi)
  2d:	02 0f                	add    (%rdi),%cl
  2f:	02 00                	add    (%rax),%al
  31:	00 00                	add    %al,(%rax)
  33:	00 00                	add    %al,(%rax)
  35:	26 00 00             	es add %al,(%rax)
  38:	00 01                	add    %al,(%rcx)
  3a:	05 01 00 09 02       	add    $0x2090001,%eax
  3f:	f0 13 00             	lock adc (%rax),%eax
  42:	00 00                	add    %al,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	00 03                	add    %al,(%rbx)
  48:	d3 00                	roll   %cl,(%rax)
  4a:	01 05 03 03 0a 4a    	add    %eax,0x4a0a0303(%rip)        # 4a0a0353 <_end+0x4a09c2d3>
  50:	05 18 06 01 05       	add    $0x5010618,%eax
  55:	03 06                	add    (%rsi),%eax
  57:	59                   	pop    %rcx
  58:	13 06                	adc    (%rsi),%eax
  5a:	82                   	(bad)  
  5b:	05 01 5a 02 01       	add    $0x1025a01,%eax
  60:	00 01                	add    %al,(%rcx)
  62:	01                   	.byte 0x1

Déassemblage de la section .debug_str :

0000000000000000 <.debug_str>:
   0:	6d                   	insl   (%dx),%es:(%rdi)
   1:	78 63                	js     66 <__abi_tag-0x336>
   3:	73 72                	jae    77 <__abi_tag-0x325>
   5:	00 75 6e             	add    %dh,0x6e(%rbp)
   8:	73 69                	jae    73 <__abi_tag-0x329>
   a:	67 6e                	outsb  %ds:(%esi),(%dx)
   c:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  11:	74 00                	je     13 <__abi_tag-0x389>
  13:	73 65                	jae    7a <__abi_tag-0x322>
  15:	74 5f                	je     76 <__abi_tag-0x326>
  17:	66 61                	data16 (bad) 
  19:	73 74                	jae    8f <__abi_tag-0x30d>
  1b:	5f                   	pop    %rdi
  1c:	6d                   	insl   (%dx),%es:(%rdi)
  1d:	61                   	(bad)  
  1e:	74 68                	je     88 <__abi_tag-0x314>
  20:	00 47 4e             	add    %al,0x4e(%rdi)
  23:	55                   	push   %rbp
  24:	20 43 31             	and    %al,0x31(%rbx)
  27:	37                   	(bad)  
  28:	20 31                	and    %dh,(%rcx)
  2a:	31 2e                	xor    %ebp,(%rsi)
  2c:	31 2e                	xor    %ebp,(%rsi)
  2e:	30 20                	xor    %ah,(%rax)
  30:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  35:	68 3d 78 38 36       	push   $0x3638783d
  3a:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  3f:	6d                   	insl   (%dx),%es:(%rdi)
  40:	74 75                	je     b7 <__abi_tag-0x2e5>
  42:	6e                   	outsb  %ds:(%rsi),(%dx)
  43:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  49:	72 69                	jb     b4 <__abi_tag-0x2e8>
  4b:	63 20                	movsxd (%rax),%esp
  4d:	2d 6d 6c 6f 6e       	sub    $0x6e6f6c6d,%eax
  52:	67 2d 64 6f 75 62    	addr32 sub $0x62756f64,%eax
  58:	6c                   	insb   (%dx),%es:(%rdi)
  59:	65 2d 38 30 20 2d    	gs sub $0x2d203038,%eax
  5f:	6d                   	insl   (%dx),%es:(%rdi)
  60:	73 68                	jae    ca <__abi_tag-0x2d2>
  62:	73 74                	jae    d8 <__abi_tag-0x2c4>
  64:	6b 20 2d             	imul   $0x2d,(%rax),%esp
  67:	67 20 2d 67 20 2d 67 	and    %ch,0x672d2067(%eip)        # 672d20d5 <_end+0x672ce055>
  6e:	20 2d 4f 32 20 2d    	and    %ch,0x2d20324f(%rip)        # 2d2032c3 <_end+0x2d1ff243>
  74:	4f 32 20             	rex.WRXB xor (%r8),%r12b
  77:	2d 4f 32 20 2d       	sub    $0x2d20324f,%eax
  7c:	66 6e                	data16 outsb %ds:(%rsi),(%dx)
  7e:	6f                   	outsl  %ds:(%rsi),(%dx)
  7f:	2d 70 6c 74 20       	sub    $0x20746c70,%eax
  84:	2d 66 63 66 2d       	sub    $0x2d666366,%eax
  89:	70 72                	jo     fd <__abi_tag-0x29f>
  8b:	6f                   	outsl  %ds:(%rsi),(%dx)
  8c:	74 65                	je     f3 <__abi_tag-0x2a9>
  8e:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  92:	6e                   	outsb  %ds:(%rsi),(%dx)
  93:	3d 66 75 6c 6c       	cmp    $0x6c6c7566,%eax
  98:	20 2d 66 62 75 69    	and    %ch,0x69756266(%rip)        # 69756304 <_end+0x69752284>
  9e:	6c                   	insb   (%dx),%es:(%rdi)
  9f:	64 69 6e 67 2d 6c 69 	imul   $0x62696c2d,%fs:0x67(%rsi),%ebp
  a6:	62 
  a7:	67 63 63 20          	movsxd 0x20(%ebx),%esp
  ab:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  b0:	73 74                	jae    126 <__abi_tag-0x276>
  b2:	61                   	(bad)  
  b3:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  b6:	70 72                	jo     12a <__abi_tag-0x272>
  b8:	6f                   	outsl  %ds:(%rsi),(%dx)
  b9:	74 65                	je     120 <__abi_tag-0x27c>
  bb:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  bf:	20 2d 66 70 69 63    	and    %ch,0x63697066(%rip)        # 6369712b <_end+0x636930ab>
  c5:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d666431 <_end+0x2d6623b1>
  cb:	70 72                	jo     13f <__abi_tag-0x25d>
  cd:	6f                   	outsl  %ds:(%rsi),(%dx)
  ce:	74 65                	je     135 <__abi_tag-0x267>
  d0:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  d4:	6e                   	outsb  %ds:(%rsi),(%dx)
  d5:	3d 66 75 6c 6c       	cmp    $0x6c6c7566,%eax
	...

Déassemblage de la section .debug_line_str :

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)  
   1:	62                   	(bad)  
   2:	75 69                	jne    6d <__abi_tag-0x32f>
   4:	6c                   	insb   (%dx),%es:(%rdi)
   5:	64 2f                	fs (bad) 
   7:	67 63 63 2f          	movsxd 0x2f(%ebx),%esp
   b:	73 72                	jae    7f <__abi_tag-0x31d>
   d:	63 2f                	movsxd (%rdi),%ebp
   f:	67 63 63 2f          	movsxd 0x2f(%ebx),%esp
  13:	6c                   	insb   (%dx),%es:(%rdi)
  14:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  1b:	6f                   	outsl  %ds:(%rsi),(%dx)
  1c:	6e                   	outsb  %ds:(%rsi),(%dx)
  1d:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  23:	38 36                	cmp    %dh,(%rsi)
  25:	2f                   	(bad)  
  26:	63 72 74             	movsxd 0x74(%rdx),%esi
  29:	66 61                	data16 (bad) 
  2b:	73 74                	jae    a1 <__abi_tag-0x2fb>
  2d:	6d                   	insl   (%dx),%es:(%rdi)
  2e:	61                   	(bad)  
  2f:	74 68                	je     99 <__abi_tag-0x303>
  31:	2e 63 00             	cs movsxd (%rax),%eax
  34:	2f                   	(bad)  
  35:	62                   	(bad)  
  36:	75 69                	jne    a1 <__abi_tag-0x2fb>
  38:	6c                   	insb   (%dx),%es:(%rdi)
  39:	64 2f                	fs (bad) 
  3b:	67 63 63 2f          	movsxd 0x2f(%ebx),%esp
  3f:	73 72                	jae    b3 <__abi_tag-0x2e9>
  41:	63 2f                	movsxd (%rdi),%ebp
  43:	67 63 63 2d          	movsxd 0x2d(%ebx),%esp
  47:	62                   	(bad)  
  48:	75 69                	jne    b3 <__abi_tag-0x2e9>
  4a:	6c                   	insb   (%dx),%es:(%rdi)
  4b:	64 2f                	fs (bad) 
  4d:	78 38                	js     87 <__abi_tag-0x315>
  4f:	36 5f                	ss pop %rdi
  51:	36 34 2d             	ss xor $0x2d,%al
  54:	70 63                	jo     b9 <__abi_tag-0x2e3>
  56:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  5b:	78 2d                	js     8a <__abi_tag-0x312>
  5d:	67 6e                	outsb  %ds:(%esi),(%dx)
  5f:	75 2f                	jne    90 <__abi_tag-0x30c>
  61:	6c                   	insb   (%dx),%es:(%rdi)
  62:	69 62 67 63 63 00 2f 	imul   $0x2f006363,0x67(%rdx),%esp
  69:	62                   	(bad)  
  6a:	75 69                	jne    d5 <__abi_tag-0x2c7>
  6c:	6c                   	insb   (%dx),%es:(%rdi)
  6d:	64 2f                	fs (bad) 
  6f:	67 63 63 2f          	movsxd 0x2f(%ebx),%esp
  73:	73 72                	jae    e7 <__abi_tag-0x2b5>
  75:	63 2f                	movsxd (%rdi),%ebp
  77:	67 63 63 2f          	movsxd 0x2f(%ebx),%esp
  7b:	6c                   	insb   (%dx),%es:(%rdi)
  7c:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  83:	6f                   	outsl  %ds:(%rsi),(%dx)
  84:	6e                   	outsb  %ds:(%rsi),(%dx)
  85:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  8b:	38 36                	cmp    %dh,(%rsi)
	...

Déassemblage de la section .debug_loclists :

0000000000000000 <.debug_loclists>:
   0:	31 00                	xor    %eax,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 00       	add    $0x800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	01 01                	add    %eax,(%rcx)
   f:	00 00                	add    %al,(%rax)
  11:	00 06                	add    %al,(%rsi)
  13:	f9                   	stc    
  14:	13 00                	adc    (%rax),%eax
  16:	00 00                	add    %al,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	00 04 00             	add    %al,(%rax,%rax,1)
  1d:	00 02                	add    %al,(%rdx)
  1f:	91                   	xchg   %eax,%ecx
  20:	74 04                	je     26 <__abi_tag-0x376>
  22:	00 08                	add    %cl,(%rax)
  24:	09 91 74 94 04 0a    	or     %edx,0xa049474(%rcx)
  2a:	40 80 21 9f          	rex andb $0x9f,(%rcx)
  2e:	04 08                	add    $0x8,%al
  30:	0e                   	(bad)  
  31:	02                   	.byte 0x2
  32:	91                   	xchg   %eax,%ecx
  33:	74 00                	je     35 <__abi_tag-0x367>

Déassemblage de la section .debug_rnglists :

0000000000000000 <.debug_rnglists>:
   0:	13 00                	adc    (%rax),%eax
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 00       	add    $0x800,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 07                	add    %al,(%rdi)
   d:	f0 13 00             	lock adc (%rax),%eax
  10:	00 00                	add    %al,(%rax)
  12:	00 00                	add    %al,(%rax)
  14:	00 17                	add    %dl,(%rdi)
	...
